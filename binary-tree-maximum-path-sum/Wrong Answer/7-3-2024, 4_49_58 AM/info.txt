{"id":1307606546,"question_id":124,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719962398,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1307606546/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nint maxm=INT_MIN;\npublic:\n    int maxs(TreeNode* root){\n        if(root==NULL){\n            return 0;\n        }\n        int val=root->val;\n        int left=maxs(root->left);\n        int right=maxs(root->right);\n        maxm=max({maxm,val+left+right,val,val+left,val+right});\n        return root->val+maxs(root->left)+maxs(root->right);\n    }\n    int maxPathSum(TreeNode* root) {\n        if(root==NULL){\n            return NULL;\n        }\n        maxs(root);\n        return maxm;\n    }\n};","compare_result":"111111111111111111100111011110011111011111011010101010010001001010100011101001111000000000000000","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}