{"id":1299234383,"question_id":124,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719269146,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1299234383/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxi(TreeNode* u,int& maxs){\n        if(u==NULL){\n            return 0;\n        }\n        int lftr=max(0,maxi(u->left,maxs));\n        int rightr=max(0,maxi(u->right,maxs));\n\n        int sum=u->val+lftr+rightr;\n        maxs=max(maxs,sum);\n\n        int maxu=u->val+max(lftr,rightr);\n        return maxu;\n    }\n    int maxPathSum(TreeNode* root) {\n        int maxde=0;\n        maxi(root,maxde);\n        return maxde;\n    }\n};","compare_result":"111101110011110111111111111111111111111111111111111111111111111111111110111111110111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}