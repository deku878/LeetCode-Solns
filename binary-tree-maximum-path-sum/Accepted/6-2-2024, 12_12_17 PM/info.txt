{"id":1274996830,"question_id":124,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1717310537,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1274996830/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"26.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int max_sum=INT_MIN;\n    int maxr(TreeNode* root){\n       if(root==NULL){\n        return 0;\n       }\n       int l=max(0,maxr(root->left));\n       int r=max(0,maxr(root->right));\n       int n=root->val+l+r;\n       max_sum=max(max_sum,n);\n       return root->val+max(l,r);\n    }\n    int maxPathSum(TreeNode* root) {\n        maxr(root);\n        return max_sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}