{"id":986190196,"question_id":907,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688481995,"status":10,"status_display":"Accepted","runtime":"70 ms","url":"/submissions/detail/986190196/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"19 MB","code":"class Solution {\npublic:\nlong long int totalhours(vector<int>&nums,long long int hourly){\n    long long int totalh=0;\n    int n=nums.size();\n    for(long long int i=0;i<n;i++){\n        totalh+=ceil((double)nums[i] / (double)hourly);\n    }\n    return totalh;\n}\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int start=1;\n        int end=*max_element(piles.begin(), piles.end());\n        while(start<=end){\n            int mid=start+(end-start)/2;\n            if(totalhours(piles,mid)>h){\n                start=mid+1;\n            }\n            else if(totalhours(piles,mid)<=h){\n                end=mid-1;\n            }\n        }\n        return start;\n}\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}