{"id":1309513260,"question_id":871,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720105917,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1309513260/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"14.2 MB","code":"class Solution {\npublic:\n    void dfs(vector<int>adj[],int node,int par,vector<int>&vis){\n        vis[node]=1;\n        for(auto y:adj[node]){\n            if(!vis[y]){\n                dfs(adj,y,node,vis);\n            }\n        }\n    }\n    bool canVisitAllRooms(vector<vector<int>>& rooms) {\n        int n=rooms.size();\n        vector<int>adj[n];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<rooms[i].size();j++){\n                int y=rooms[i][j];\n                if(y!=i){\n                    adj[i].push_back(y);\n                }\n            }\n        }\n        vector<int>vis(n,0);\n        vis[0]=1;\n        for(int i=0;i<vis.size();i++){\n            if(vis[i]){\n                dfs(adj,i,-1,vis);\n            }\n        }\n        vis[0]=1;\n        for(int i=0;i<n;i++){\n            cout<<vis[i]<<\" \";\n        }\n        cout<<endl;\n        cout<<count(vis.begin(),vis.end(),1)<<endl;\n        return count(vis.begin(),vis.end(),1)==n;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false,"flag_type":1}