{"id":1305028789,"question_id":789,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719767893,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1305028789/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"23.5 MB","code":"class KthLargest {\nprivate:\n priority_queue<int, vector<int>, greater<int>> pq; // min-heap\nint ans=0;\nint K;\nvector<int>x;\npublic:\n    KthLargest(int k, vector<int>& nums) {\n        K=k;\n        for(int i=0;i<nums.size();i++){\n            add(nums[i]);\n        }\n    }\n    \n    int add(int val) {\n        if (pq.size() < K) {\n            pq.push(val);\n        } else if (val > pq.top()) {\n            pq.push(val);\n            pq.pop();\n        }\n        return pq.top();\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}