{"id":1337643826,"question_id":1034,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1722278388,"status":10,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/1337643826/","is_pending":"Not Pending","title":"Subarrays with K Different Integers","memory":"67.2 MB","code":"class Solution {\npublic:\n    int atmost(vector<int>&nums,int k){\n        if(k<0){\n            return 0;\n        }\n        int io=0;\n        int j=0;\n        map<int,int>mp;\n        for(int i=0;i<nums.size();i++){\n            mp[nums[i]]++;\n            while(mp.size()>k){\n                mp[nums[j]]--;\n                if(mp[nums[j]]==0){\n                    mp.erase(nums[j]);\n                }\n                j++;\n            }\n            io+=i-j+1;\n        }\n        return io;\n    }\n    int subarraysWithKDistinct(vector<int>& nums, int k) {\n        return atmost(nums,k)-atmost(nums,k-1);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"subarrays-with-k-different-integers","has_notes":false,"flag_type":1}