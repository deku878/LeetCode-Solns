{"id":1151245060,"question_id":1034,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1705726113,"status":10,"status_display":"Accepted","runtime":"188 ms","url":"/submissions/detail/1151245060/","is_pending":"Not Pending","title":"Subarrays with K Different Integers","memory":"58.4 MB","code":"class Solution {\npublic:\n    int atmost(vector<int>&nums,int k){\n        int i=0;\n        int j=0;\n        int count=0;\n        map<int,int>mp;\n        int n=nums.size();\n        while(i<n){\n            mp[nums[i]]++;\n            while(mp.size()>k){\n                mp[nums[j]]--;\n                if(mp[nums[j]]<=0){\n                    mp.erase(nums[j]);\n                }\n                j++;\n            }\n            count+=i-j+1;\n            i++;\n        }\n        return count;\n    }\n    int subarraysWithKDistinct(vector<int>& nums, int k) {\n       return atmost(nums,k)-atmost(nums,k-1);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"subarrays-with-k-different-integers","has_notes":false,"flag_type":1}