{"id":1311302290,"question_id":474,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720254444,"status":10,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/1311302290/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"104.6 MB","code":"class Solution {\npublic:\n    int sub(vector<pair<int,int>>& a, int idx, int no, int nz, vector<vector<vector<int>>>& dp) {\n        int n = a.size();\n        if (idx == n || (no == 0 && nz == 0)) {\n            return 0;\n        }\n        if (dp[idx][no][nz] != -1) {\n            return dp[idx][no][nz];\n        }\n        \n        int inc = 0, exc = 0;\n        if (a[idx].second <= nz && a[idx].first <= no) {\n            inc = 1 + sub(a, idx + 1, no - a[idx].first, nz - a[idx].second, dp);\n        }\n        exc = sub(a, idx + 1, no, nz, dp);\n        \n        return dp[idx][no][nz] = max(inc, exc);\n    }\n    \n    int findMaxForm(vector<string>& strs, int m, int n) {\n        vector<pair<int,int>> a;\n        for (auto& s : strs) {\n            int one = 0, zero = 0;\n            for (char c : s) {\n                if (c == '1') one++;\n                else zero++;\n            }\n            a.push_back({zero, one});\n        }\n        \n        int x = strs.size();\n        vector<vector<vector<int>>> dp(x, vector<vector<int>>(m + 1, vector<int>(n + 1, -1)));\n        \n        int ans = sub(a, 0, m, n, dp);\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"ones-and-zeroes","has_notes":false,"flag_type":1}