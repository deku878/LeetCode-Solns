{"id":1299241855,"question_id":144,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719270294,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1299241855/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int>preo;\n        if(root==NULL){\n            return preo;\n        }\n        stack<TreeNode*>st;\n        st.push(root);\n        while(!st.empty()){\n            auto roo=st.top();\n            st.pop();\n            preo.push_back(roo->val);\n            if(roo->left!=NULL){\n                st.push(roo->left);\n            }\n            if(roo->right!=NULL){\n                st.push(roo->right);\n            }\n        }\n        return preo;\n    }\n};","compare_result":"1111110111100110010110111100010000010010000010010010110010010110111001","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}