{"id":1292246754,"question_id":493,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718704478,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1292246754/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"N/A","code":"class Solution {\npublic:\n    void merge(vector<int> &arr,long long int low,long long int mid, long long int high) {\n    vector<long long int> temp; // temporary array\n    long long int left = low;      // starting index of left half of arr\n    long long int right = mid + 1;   // starting index of right half of arr\n\n    //storing elements in the temporary array in a sorted manner//\n\n    while (left <= mid && right <= high) {\n        if (arr[left] <= arr[right]) {\n            temp.push_back(arr[left]);\n            left++;\n        }\n        else {\n            temp.push_back(arr[right]);\n            right++;\n        }\n    }\n\n    // if elements on the left half are still left //\n\n    while (left <= mid) {\n        temp.push_back(arr[left]);\n        left++;\n    }\n\n    //  if elements on the right half are still left //\n    while (right <= high) {\n        temp.push_back(arr[right]);\n        right++;\n    }\n\n    // transfering all elements from temporary to arr //\n    for (long long int i = low; i <= high; i++) {\n        arr[i] = temp[i - low];\n    }\n}\n\nlong long int countPairs(vector<int> &arr,long long  int low,long long int mid, long long int high) {\n    int right = mid + 1;\n    int cnt = 0;\n    for (int i = low; i <= mid; i++) {\n        while (right <= high && arr[i] > 2 * arr[right]) right++;\n        cnt += (right - (mid + 1));\n    }\n    return cnt;\n}\n\nlong long int mergeSort(vector<int> &arr, long long int low,long long int high) {\n    long long int cnt = 0;\n    if (low >= high) return cnt;\n    long long int mid = (low + high) / 2 ;\n    cnt += mergeSort(arr, low, mid);  // left half\n    cnt += mergeSort(arr, mid + 1, high); // right half\n    cnt += countPairs(arr, low, mid, high); //Modification\n    merge(arr, low, mid, high);  // merging sorted halves\n    return cnt;\n}\n    long long int reversePairs(vector<int>& nums) {\n        return mergeSort(nums,0,nums.size()-1);\n    }\n};","compare_result":"11111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reverse-pairs","has_notes":false,"flag_type":1}