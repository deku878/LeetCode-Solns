{"id":1307582110,"question_id":236,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719958780,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1307582110/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(root==p or root==q){\n            return root;\n        }\n        if(p==NULL or q==NULL){\n            return root;\n        }\n        if(root->left==p and root->right==q or root->right==p or root->left==q){\n            return root;\n        }\n        if(lowestCommonAncestor(root->left,p,q)==p or lowestCommonAncestor(root->left,p,q)==q){\n            return root->left;\n        }\n        if(lowestCommonAncestor(root->right,p,q)==p or lowestCommonAncestor(root->right,p,q)==q){\n            return root->right;\n        }\n        return NULL;\n    }\n};","compare_result":"11111111101100000000000000000000","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}