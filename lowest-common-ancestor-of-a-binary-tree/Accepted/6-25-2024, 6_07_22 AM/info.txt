{"id":1299279236,"question_id":236,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719275842,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1299279236/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"15.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(root==NULL||root==p||root==q) return root;\n\n        TreeNode* left=lowestCommonAncestor(root->left,p,q);\n        TreeNode* right=lowestCommonAncestor(root->right,p,q);\n\n        if(left==NULL) return right;\n        if(right==NULL) return left;\n        else return root;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}