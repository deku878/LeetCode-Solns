{"id":1019935472,"question_id":236,"lang":"cpp","lang_name":"C++","time":"1 year, 1 month","timestamp":1691907715,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1019935472/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if(root==NULL){\n            return NULL;\n        }\n        if(root->val==p->val){\n            return p;\n        }\n        else if(root->val==q->val){\n            return q;\n        }\n        TreeNode* leftans=lowestCommonAncestor(root->left,p,q);\n        TreeNode* rightans=lowestCommonAncestor(root->right,p,q);\n        if(leftans==NULL and rightans==NULL){\n            return NULL;\n        }\n        else if(rightans!=NULL and leftans==NULL){\n            return rightans;\n        }\n        else if(leftans!=NULL and rightans==NULL){\n            return leftans;\n        }\n        else{\n            return root;\n        }\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}