{"id":1309043163,"question_id":97,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720074409,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1309043163/","is_pending":"Not Pending","title":"Interleaving String","memory":"8 MB","code":"class Solution {\npublic:\n    bool isInterleave(string s1, string s2, string s3) {\n                int n = s1.size();\n        int m = s2.size();\n        int k = s3.size();\n        \n        // If lengths don't add up, return false\n        if (n + m != k) return false;\n\n        // Create a DP table\n        vector<vector<bool>> dp(n + 1, vector<bool>(m + 1, false));\n\n        // Initialize the table\n        dp[0][0] = true;\n        for (int i = 1; i <= n; i++) {\n            dp[i][0] = dp[i-1][0] && (s1[i-1] == s3[i-1]);\n        }\n        for (int j = 1; j <= m; j++) {\n            dp[0][j] = dp[0][j-1] && (s2[j-1] == s3[j-1]);\n        }\n\n        // Fill the DP table\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                dp[i][j] = (dp[i-1][j] && s1[i-1] == s3[i+j-1]) || (dp[i][j-1] && s2[j-1] == s3[i+j-1]);\n            }\n        }\n\n        // The result is in dp[n][m]\n        return dp[n][m];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interleaving-string","has_notes":false,"flag_type":1}