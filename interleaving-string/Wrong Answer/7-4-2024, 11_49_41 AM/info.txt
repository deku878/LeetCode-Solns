{"id":1309035926,"question_id":97,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720073981,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1309035926/","is_pending":"Not Pending","title":"Interleaving String","memory":"N/A","code":"class Solution {\npublic:\n    bool isInterleave(string s1, string s2, string s3) {\n        int n=s1.size();\n        int m=s2.size();\n        int k=s3.size();\n        vector<vector<int>>dp(n+1,vector<int>(k+1,0));\n        vector<vector<int>>dp1(m+1,vector<int>(k+1,0));\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=k;j++){\n                if(s1[i-1]==s3[j-1]){\n                    dp[i][j]=max({1+dp[i-1][j-1],dp[i-1][j],dp[i][j-1]});\n                }\n                else{\n                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n                }\n            }\n        }\n        for(int i=1;i<=m;i++){\n            for(int j=1;j<=k;j++){\n                if(s2[i-1]==s3[j-1]){\n                    dp1[i][j]=1+dp1[i-1][j-1];\n                }\n                else{\n                    dp1[i][j]=max(dp1[i-1][j],dp1[i][j-1]);\n                }\n            }\n        }\n        int lcs1=dp[n][k];\n        int lcs2=dp1[m][k];\n        if((lcs1+lcs2)<s3.size() or lcs1!=s1.size() or lcs2!=s2.size()){\n            return false;\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111110111111011111101111111111111110111111111111111011111001111011011100011110","title_slug":"interleaving-string","has_notes":false,"flag_type":1}