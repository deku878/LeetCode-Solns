{"id":985278552,"question_id":33,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688386672,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/985278552/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    int binarySearch(vector<int>&arr, int l, int r, int x){\n    while (l <= r) {\n        int m = l + (r - l) / 2;\n        if (arr[m] == x)\n            return m;\n        if (arr[m] < x)\n            l = m + 1;\n        else\n            r = m - 1;\n    }\n    return -1;\n}\nint minIdx(vector<int>&v){\n         int l=0;\n        int r=v.size()-1;\n        int index;\n        while(l<=r){\n            int mid=(l+r)/2;\n            int next=(mid+1)%v.size();\n            int prev=(mid+v.size()-1)%v.size();\n            if(v[mid]<=v[next] and v[mid]<=v[prev]){\n               return mid;\n            }\n            else{\n                if(v[l]<=v[mid]){\n                    l=mid+1;\n                }\n                else if(v[mid]<=v[r]){\n                    r=mid-1;\n                }\n            }\n        }\n        return 0;}\nint search(vector<int>& nums, int target) {\n        int n=nums.size();\n        int idx = minIdx(nums);\n       int st = idx, ed = n-1;\n        int ans = binarySearch(nums,st,ed,target);\n        if(ans == -1){\n            st = 0, ed = idx-1;\n            ans = binarySearch(nums,st,ed,target);\n        }\n        return ans;}\n};","compare_result":"011111111111111111111111111111111111001111111111111111111111111111111111111111111101111111111111111111111111111111111111110111111111111101111111111111111111110111111111110111111111111111011111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}