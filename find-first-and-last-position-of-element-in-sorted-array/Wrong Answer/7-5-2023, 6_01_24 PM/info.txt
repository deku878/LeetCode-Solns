{"id":986927779,"question_id":34,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688560284,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/986927779/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"class Solution {\npublic:\nint upper_bound(vector<int>&arr, int N, int X){\n    int low=0;\n    int high=N-1;\n    int ans=N;\n    while(low<=high){\n        int mid=low+(high-low)/2;\n        if(arr[mid]>X){\n            ans=mid;\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;\n}\nint lower_bound(vector<int>&arr, int N, int X){\n    int low=0;\n    int high=N-1;\n    int ans=-1;\n       while(low<=high){\n        int mid=low+(high-low)/2;\n        if(arr[mid]>=X){\n            ans=mid;\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;\n}\n    vector<int> searchRange(vector<int>& nums, int target) {\n         vector<int>o(2);\n        if(count(nums.begin(),nums.end(),target)==0){\n            o[0]=-1;\n        o[1]=-1;\n        }\n        else{\n        int start=lower_bound(nums,nums.size(),target);\n        int end=lower_bound(nums,nums.size(),target+1)-1;\n        o[0]=start;\n        o[1]=end;}\n        return o;\n    }\n};","compare_result":"1111011010111010100111111010111111011111110110111100111110111111111110111111101110001011","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}