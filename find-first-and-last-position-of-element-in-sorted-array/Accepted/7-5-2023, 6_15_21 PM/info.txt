{"id":986936088,"question_id":34,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688561121,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/986936088/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"13.4 MB","code":"class Solution {\npublic:\nint upperbound(vector<int>&arr, int N, int X){\n    int low=0;\n    int high=N-1;\n    int ans=-1;\n    while(low<=high){\n        int mid=low+(high-low)/2;\n        if(arr[mid]>X){\n            ans=mid;\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;\n}\nint lowerbound(vector<int>&arr, int N, int X){\n    int low=0;\n    int high=N-1;\n    int ans=-1;\n       while(low<=high){\n        int mid=low+(high-low)/2;\n        if(arr[mid]>=X){\n            ans=mid;\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;\n}\n    vector<int> searchRange(vector<int>& nums, int target) {\n    int startPos = lower_bound(nums.begin(),nums.end(),target)-nums.begin();\n        int endPos = lower_bound(nums.begin(),nums.end(),target + 1) - nums.begin() - 1;\n        if(startPos < nums.size() && nums[startPos] == target)\n            return {startPos,endPos};\n        return {-1,-1};\n}\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}