{"id":1268409545,"question_id":131,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1716718209,"status":10,"status_display":"Accepted","runtime":"147 ms","url":"/submissions/detail/1268409545/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"140.1 MB","code":"class Solution {\npublic:\n    bool isP(string&s,int l,int r){\n        while(l<r){\n            if(s[l]!=s[r]){\n                return false;\n            }\n            l++;r--;\n        }\n        return true;\n    }\n    void backtrack(string &s,int idx,vector<string>curr,vector<vector<string>>&result){\n        if(idx==s.size()){\n            result.push_back(curr);\n            return;\n        }\n        for(int i=idx;i<s.size();i++){\n            if(isP(s,idx,i)){\n                curr.push_back(s.substr(idx,i-idx+1));\n                backtrack(s,i+1,curr,result);\n                curr.pop_back();\n            }\n        }\n    }\n    vector<vector<string>> partition(string s) {\n        vector<vector<string>>curr;\n        vector<string>x;\n        backtrack(s,0,x,curr);\n        return curr;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}