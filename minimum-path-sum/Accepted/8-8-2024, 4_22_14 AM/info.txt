{"id":1348288218,"question_id":64,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1723071134,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1348288218/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"13 MB","code":"class Solution {\npublic:\n    int maxpath(int n,int m,vector<vector<int>>&dp,vector<vector<int>>&d){\n        if(n==0 and m==0){\n            return d[n][m];\n        }\n        if(dp[n][m]!=INT_MAX){\n            return dp[n][m];\n        }\n        int up=INT_MAX,left=INT_MAX;\n        if(n-1>=0){\n            up=d[n][m]+maxpath(n-1,m,dp,d);\n        }\n        if(m-1>=0){\n            left=d[n][m]+maxpath(n,m-1,dp,d);\n        }\n        return dp[n][m]=min(up,left);\n    }\n    int minPathSum(vector<vector<int>>& g) {\n        int n=g.size();\n        int m=g[0].size();\n        vector<vector<int>>dp(n,vector<int>(m,INT_MAX));\n        return maxpath(n-1,m-1,dp,g);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}