{"id":1338464349,"question_id":145,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1722346238,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1338464349/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"10.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>res;\n    void post(TreeNode* root){\n        if(root==NULL){\n            return;\n        }\n        post(root->left);\n        post(root->right);\n        res.push_back(root->val);\n    }\n    vector<int> postorderTraversal(TreeNode* root) {\n        res.clear();\n        post(root);\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}