{"id":1322455859,"question_id":673,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1721102048,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1322455859/","is_pending":"Not Pending","title":"Number of Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int findNumberOfLIS(vector<int>& nums) {\n        int n = nums.size();\n        if (n == 0) return 0;\n        \n        vector<int> dp(n, 1);\n        vector<int> count(n, 1);\n        int maxLen = 1;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<i;j++){\n                if(nums[i]>nums[j]){\n                    if(dp[j]+1>dp[i]){\n                        dp[i]=dp[j]+1;\n                        count[i]=count[j];\n                    }\n                    else{\n                        count[i]+=count[j];\n                    }\n                }\n            }\n            maxLen=max(maxLen,dp[i]);\n        }\n        int res=0;\n        for(int i=0;i<n;i++){\n            if(dp[i]==maxLen){\n            res+=count[i];}\n        }\n        return res;\n    }\n};\n","compare_result":"1111111111111111111111111111111001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"number-of-longest-increasing-subsequence","has_notes":false,"flag_type":1}