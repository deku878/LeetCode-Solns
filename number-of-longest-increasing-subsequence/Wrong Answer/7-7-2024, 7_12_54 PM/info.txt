{"id":1312901908,"question_id":673,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720359774,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1312901908/","is_pending":"Not Pending","title":"Number of Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int findNumberOfLIS(vector<int>& nums) {\n        vector<int>dp(nums.size(),1);\n        int maxm=1;\n        int cnt=nums.size();\n        for(int i=0;i<nums.size();i++){\n            for(int j=0;j<i;j++){\n                if(nums[i]>nums[j]){\n                    dp[i]=max(dp[i],1+dp[j]);\n                    if(dp[i]>maxm){\n                        cnt=1;\n                        maxm=dp[i];\n                    }\n                    else if(dp[i]==maxm){\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"1101111111111111111110111110111001000000100100010100010000000010000000011111110111111111001101010001000000000000000000000000000000000000000000001000000000000000000000000000000000100000000000000111111110100101000011110001001","title_slug":"number-of-longest-increasing-subsequence","has_notes":false,"flag_type":1}