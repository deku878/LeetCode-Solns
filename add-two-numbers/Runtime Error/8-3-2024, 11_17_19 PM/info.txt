{"id":1343375847,"question_id":2,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1722707239,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1343375847/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        vector<int> res1;\n        vector<int> res2;\n\n        // Collect digits from the first list\n        while (l1 != nullptr) {\n            res1.push_back(l1->val);\n            l1 = l1->next;\n        }\n\n        // Collect digits from the second list\n        while (l2 != nullptr) {\n            res2.push_back(l2->val);\n            l2 = l2->next;\n        }\n\n        // Convert the vectors to integers\n        int num1 = 0, num2 = 0;\n        int multiplier = 1;\n        for (int digit : res1) {\n            num1 += digit * multiplier;\n            multiplier *= 10;\n        }\n\n        multiplier = 1;\n        for (int digit : res2) {\n            num2 += digit * multiplier;\n            multiplier *= 10;\n        }\n\n        // Add the two numbers\n        int sum = num1 + num2;\n\n        // Edge case: if the sum is 0, return a single node with value 0\n        if (sum == 0) {\n            return new ListNode(0);\n        }\n\n        // Convert the sum back to a linked list\n        ListNode* dummyHead = new ListNode(0); // Dummy head to simplify list construction\n        ListNode* current = dummyHead;\n\n        while (sum > 0) {\n            int digit = sum % 10;\n            current->next = new ListNode(digit);\n            current = current->next;\n            sum /= 10;\n        }\n\n        // Return the next node of dummy head, which is the actual head of the result list\n        return dummyHead->next;\n    }\n};\n","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"flag_type":1}