{"id":1313105057,"question_id":688,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720372610,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1313105057/","is_pending":"Not Pending","title":"Knight Probability in Chessboard","memory":"10.3 MB","code":"class Solution {\npublic:\n    int dx[8] = {1, 1, 2, 2, -1, -1, -2, -2};\n    int dy[8] = {2, -2, 1, -1, 2, -2, 1, -1};\n\n    double knightProbability(int n, int k, int row, int col) {\n        vector<vector<double>> dp(n, vector<double>(n, 0.0));\n\n        dp[row][col] = 1.0;\n\n        for (int m = 1; m <= k; m++) {\n            vector<vector<double>> new_dp(n,vector<double>(n, 0.0));\n            for (int x = 0; x < n; x++) {\n                for (int y = 0; y < n; y++) {\n                    for (int i = 0; i < 8; i++) {\n                        int nx = x + dx[i];\n                        int ny = y + dy[i];\n\n                        if (nx >= 0 && nx < n && ny >= 0 && ny < n) {\n                            new_dp[nx][ny] += dp[x][y] / 8.0;\n                        }\n                    }\n                }\n            }\n            dp = move(new_dp);\n        }\n\n        double ans = 0.0;\n        for (int x = 0; x < n; x++) {\n            for (int y = 0; y < n; y++) {\n                ans += dp[x][y];\n            }\n        }\n\n        return ans;\n    }\n};\n","compare_result":"1111111111111111111111","title_slug":"knight-probability-in-chessboard","has_notes":false,"flag_type":1}