{"id":1342824967,"question_id":733,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1722680019,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1342824967/","is_pending":"Not Pending","title":"Flood Fill","memory":"17.6 MB","code":"class Solution {\npublic:\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {\n        if(image[sr][sc]==color){\n            return image;\n        }\n        queue<pair<int,int>>q;\n        vector<vector<int>>vis(image.size(),vector<int>(image[0].size(),0));\n        vector<vector<int>>vis1(image.size(),vector<int>(image[0].size(),0));\n        vis1=image;\n        q.push({sr,sc});\n        vis[sr][sc]=1;\n        int prev=image[sr][sc];\n        vis1[sr][sc]=color;\n        while(!q.empty()){\n            auto x=q.front().first;\n            auto y=q.front().second;\n            int dx[4]={-1,0,1,0};\n            int dy[4]={0,-1,0,1};\n            q.pop();\n            for(int i=0;i<4;i++){\n                int nx=x+dx[i];\n                int ny=y+dy[i];\n                if(nx>=0 and ny>=0 and nx<image.size() and ny<image[0].size()){\n                    if(vis[nx][ny]==0 and image[nx][ny]==prev){\n                        q.push({nx,ny});\n                        vis1[nx][ny]=color;\n                        vis[nx][ny]=1;\n                    }\n                }\n            }\n        }\n        return vis1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false,"flag_type":1}