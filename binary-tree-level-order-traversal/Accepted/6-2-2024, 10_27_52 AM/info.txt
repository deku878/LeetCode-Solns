{"id":1274905332,"question_id":102,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1717304272,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1274905332/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n       vector<vector<int>> result;\n       vector<int> temp;\n       if(root == nullptr)\n            return result;\n\n       queue<TreeNode*>q;\n       q.push(root);\n       while(!q.empty()){\n        int sz=q.size();\n        for(int i=0;i<sz;i++){\n            TreeNode* x=q.front();\n            temp.push_back(x->val);\n            if(x->left){\n                q.push(x->left);\n            }\n            if(x->right){\n                q.push(x->right);\n            }\n            q.pop();\n        }\n        result.push_back(temp);\n        temp.clear();\n       }\n       return result;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}