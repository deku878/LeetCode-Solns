{"id":1307431513,"question_id":102,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719945345,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1307431513/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"15.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        queue<TreeNode*>q;\n        q.push(root);\n        vector<vector<int>>res;\n        if(root==NULL){\n            return res;\n        }\n        while(!q.empty()){\n            vector<int>x;\n            int sz=q.size();\n            for(int i=0;i<sz;i++){\n                auto k=q.front();\n                q.pop();\n                x.push_back(k->val);\n                if(k->left!=NULL){\n                    q.push(k->left);\n                }\n                if(k->right!=NULL){\n                    q.push(k->right);\n                }\n            }\n            res.push_back(x);\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}