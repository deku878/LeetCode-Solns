{"id":1310477626,"question_id":803,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720185047,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1310477626/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"16.4 MB","code":"class Solution {\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {\n        queue<pair<int,pair<int,int>>>q;\n        q.push({0,{src,0}});\n        vector<pair<int,int>>adj[n];\n        for(int i=0;i<flights.size();i++){\n            int from = flights[i][0];\n            int to = flights[i][1];\n            int cost = flights[i][2];\n            adj[from].push_back({to, cost});\n        }\n        vector<int>dis(n,INT_MAX);\n        dis[src]=0;\n        while(!q.empty()){\n            auto x=q.front();\n            q.pop();\n            int node=x.second.first;\n            int wt=x.first;\n            int stops=x.second.second;\n            for(auto y:adj[node]){\n                if(y.second+wt<dis[y.first] and stops<=k){\n                    dis[y.first]=y.second+wt;\n                    q.push({dis[y.first],{y.first,stops+1}});\n                }\n            }\n        }\n        if(dis[dst]==INT_MAX){\n            return -1;\n        }\n        return dis[dst];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}