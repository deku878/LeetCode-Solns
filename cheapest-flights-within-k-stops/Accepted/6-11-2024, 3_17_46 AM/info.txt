{"id":1284267075,"question_id":803,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1718056066,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1284267075/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"17 MB","code":"class Solution {\npublic:\n    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {\n        vector<pair<int,int>> adj[n];\n        for(auto it : flights) {\n            adj[it[0]].push_back({it[1], it[2]});\n        }\n        \n        queue<pair<int, pair<int,int>>> q;\n        q.push({0, {src, 0}});\n        \n        vector<int> dist(n, 1e9);\n        dist[src] = 0;\n        while(!q.empty()) {\n            auto it = q.front();\n            q.pop();\n            int cost = it.first;\n            int node = it.second.first;\n            int stops = it.second.second;\n            \n            for(auto it : adj[node]) {\n                int adjNode = it.first;\n                int edWt = it.second;\n                \n                if(stops <= k && cost+edWt < dist[adjNode]) {\n                    dist[adjNode] = cost + edWt;\n                    q.push({cost+edWt, {adjNode, stops+1}});\n                }\n            }\n            \n        }\n        \n        if(dist[dst] == 1e9) return -1;\n        return dist[dst];\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}