{"id":1319057250,"question_id":1437,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720814425,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/1319057250/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"29.9 MB","code":"class Solution {\npublic:\n    int minInsertions(string s) {\n        vector<vector<int>>dp(s.size()+1,vector<int>(s.size()+1,0));\n        string t=s;\n        reverse(t.begin(),t.end());\n        for(int i=1;i<=s.size();i++){\n            for(int j=1;j<=s.size();j++){\n                if(t[i-1]==s[j-1]){\n                    dp[i][j]=1+dp[i-1][j-1];\n                }\n                else{\n                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n                }\n            }\n        }\n        int lcs=dp[s.size()][t.size()];\n        return s.size()-lcs;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}