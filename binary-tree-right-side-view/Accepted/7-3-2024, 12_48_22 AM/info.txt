{"id":1307471853,"question_id":199,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719947902,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1307471853/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"14.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        queue<TreeNode*>q;\n        q.push(root);\n        vector<int>v;\n        if(root==NULL){\n            return v;\n        }\n        while(!q.empty()){\n            int sz=q.size();\n            for(int i=0;i<sz;i++){\n                auto x=q.front();\n                q.pop();\n                if(i==sz-1){\n                    v.push_back(x->val);\n                }\n                if(x->left!=NULL){\n                    q.push(x->left);\n                }\n                if(x->right!=NULL){\n                    q.push(x->right);\n                }\n            }\n        }\n        return v;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}