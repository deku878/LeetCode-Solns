{"id":1275240900,"question_id":199,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1717328161,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1275240900/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"14.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        if(root==NULL){\n            vector<int>u;\n            return u;\n        }\n        queue<TreeNode*>q;\n        vector<int>x,y;\n        q.push(root);\n        while(!q.empty()){\n            int lo=q.size();\n            for(int i=0;i<lo;i++){\n            auto j=q.front();\n            q.pop();\n            if(j->left){\n                q.push(j->left);\n            }\n            if(j->right){\n                q.push(j->right);\n            }\n            x.push_back(j->val);\n            }\n            y.push_back(x.back());\n            x.clear();\n    }\n    return y;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}