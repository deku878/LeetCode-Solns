{"id":1216318541,"question_id":1170,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1711625700,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1216318541/","is_pending":"Not Pending","title":"Shortest Common Supersequence ","memory":"11.8 MB","code":"class Solution {\npublic:\n     \n    string shortestCommonSupersequence(string str1, string str2) {\n        int n=str1.length();\n        int m=str2.length();\n        int dp[n+1][m+1];\n        for(int i=0;i<n+1;i++){\n            for(int j=0;j<m+1;j++){\n                if(i==0||j==0){\n                    dp[i][j]=0;\n                }\n            }\n        }\n        for(int i=1;i<n+1;i++){\n            for(int j=1;j<m+1;j++){\n                \n                if(str1[i-1]==str2[j-1]){\n                    dp[i][j]=1+dp[i-1][j-1];\n                }\n                else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n            }\n        }\n\n        // int i=n;\n        // int j=m;\n        // string str=\"\";\n        // while(i!=0&&j!=0){\n        //     if(str1[i-1]==str[j-1]){\n        //         str.push_back(str1[i-1]);\n        //         i--;\n        //         j--;\n        //     }\n        //     else if(dp[i][j-1] > dp[i-1][j]){\n        //         j--;\n        //     }\n        //     else{\n        //         i--;\n        //     }\n        // }\n        // reverse(str.begin(),str.end());\n         \n        // string modified=str1;\n\n        // for(int i=0;i<n+1;i++){\n        //     for(int j=0;j<str.length();j++){\n        //         if(str[j]==modified[i]){\n        //             modified.erase(i,1);\n        //             break;\n        //         }\n        //     }\n\n        // }\n\n        // string result=modified+str2;\n\n        // return result;\n         int i = n;\n    int j = m;\n    string str = \"\";\n    while (i > 0 && j > 0) {  // Corrected condition\n        if (str1[i-1] == str2[j-1]) {\n            str.push_back(str1[i-1]);\n            i--;\n            j--;\n        }\n        else if (dp[i][j-1] > dp[i-1][j]) {\n            str.push_back(str2[j-1]);  // Append character from str2\n            j--;\n        }\n        else {\n            str.push_back(str1[i-1]);  // Append character from str1\n            i--;\n        }\n    }\n\n    while (i > 0) {\n        str.push_back(str1[i-1]);\n        i--;\n    }\n\n    while (j > 0) {\n        str.push_back(str2[j-1]);\n        j--;\n    }\n\n    reverse(str.begin(), str.end());\n\n    return str;\n\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"shortest-common-supersequence","has_notes":false,"flag_type":1}