{"id":1274954614,"question_id":110,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1717307754,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1274954614/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int height(TreeNode* root){\n         if(root==NULL){\n            return 0;\n        }\n        int lh=height(root->left);\n        int rh=height(root->right);\n        if(lh==-1){\n            return -1;\n        }\n        if(rh==-1){\n            return -1;\n        }\n        if(abs(lh-rh)>1){\n            return -1;\n        }\n        return 1+max(lh,rh);\n    }\n    bool isBalanced(TreeNode* root) {\n        if(root==NULL){\n            return true;\n        }\n        if(height(root)!=-1){\n            return true;\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}