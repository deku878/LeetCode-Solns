{"id":1307435288,"question_id":110,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719945564,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1307435288/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxh(TreeNode* root){\n        if(root==NULL){\n            return 0;\n        }\n        int lh=maxh(root->left);\n        int rh=maxh(root->right);\n        return max(lh,rh)+1;\n    }\n    bool isBalanced(TreeNode* root) {\n        if(root==NULL){\n            return true;\n        }\n        int lh=maxh(root->left);\n        int rh=maxh(root->right);\n        if(abs(lh-rh)>1){\n            return false;\n        }\n        return isBalanced(root->left) and isBalanced(root->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}