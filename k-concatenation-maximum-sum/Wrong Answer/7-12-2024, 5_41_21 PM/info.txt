{"id":1318629631,"question_id":1299,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720786281,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1318629631/","is_pending":"Not Pending","title":"K-Concatenation Maximum Sum","memory":"N/A","code":"class Solution {\npublic:\n    int kConcatenationMaxSum(vector<int>& arr, int k) {\n        //if k=1;\n        //we dont have to do anything directly find the kadanes\n        //if sum>0\n        //we have to basically take the kadanes of first two\n        //if sum<0\n        //we have to take the kadanes of first two+sum*(k-2) of the rest\n        long long int sum1=0;\n        for(int i=0;i<arr.size();i++){\n            sum1+=arr[i];\n        }\n        if(k==1){\n            long long int sum=0,maxsum=0;\n            for(int i=0;i<arr.size();i++){\n                if(sum+arr[i]<0){\n                    maxsum=max(maxsum,sum);\n                    sum=0;\n                }\n                else{\n                    sum+=arr[i];\n                    maxsum=max(maxsum,sum);\n                }\n            }\n            return maxsum;\n        }\n        else if(sum1>0){\n            long long int sum=0,maxsum=0;\n            vector<int>a;\n            for(int i=0;i<arr.size();i++){\n                a.push_back(arr[i]);\n            }\n            for(int i=0;i<arr.size();i++){\n                a.push_back(arr[i]);\n            }\n            for(int i=0;i<a.size();i++){\n                 if(sum+a[i]<0){\n                    maxsum=max(maxsum,sum);\n                    sum=0;\n                 }\n                 else{\n                    sum+=a[i];\n                    maxsum=max(maxsum,sum);\n                }\n            }\n            return maxsum+(k-2)*(sum1);\n        }\n         long long int sum=0,maxsum=0;\n            vector<int>a;\n            for(int i=0;i<arr.size();i++){\n                a.push_back(arr[i]);\n            }\n            for(int i=0;i<arr.size();i++){\n                a.push_back(arr[i]);\n            }\n            for(int i=0;i<a.size();i++){\n                 if(sum+a[i]<0){\n                    maxsum=max(maxsum,sum);\n                    sum=0;\n                 }\n                 else{\n                    sum+=a[i];\n                    maxsum=max(maxsum,sum);\n                }\n            }\n            return maxsum;\n    }\n};","compare_result":"11111111111101111111111111111111111111110011","title_slug":"k-concatenation-maximum-sum","has_notes":false,"flag_type":1}