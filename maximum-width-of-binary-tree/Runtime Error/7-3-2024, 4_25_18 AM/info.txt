{"id":1307596786,"question_id":662,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719960918,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1307596786/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        queue<pair<long long int,TreeNode*>>q;\n        q.push({0,root});\n        long long int minwidth=1;\n        while(!q.empty()){\n            int sz=q.size();\n            long long int currmin=INT_MAX;\n            long long int currmax=INT_MIN;\n            for(int i=0;i<sz;i++){\n                auto x=q.front();\n                q.pop();\n                currmin=min(x.first,currmin);\n                currmax=max(x.first,currmax);\n                if(x.second->left!=NULL){\n                    long long int res=2*x.first+1;\n                    q.push({res,x.second->left});\n                }\n                if(x.second->right!=NULL){\n                     long long int res=2*x.first+2;\n                     q.push({res,x.second->right});\n                }\n            }\n            minwidth=max(currmax-currmin+1,minwidth);\n        }\n        return minwidth;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000","title_slug":"maximum-width-of-binary-tree","has_notes":false,"flag_type":1}