{"id":1275334985,"question_id":662,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1717335066,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1275334985/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        queue<pair<TreeNode*,int>>q;\n        q.push({root,1});\n        int last,first;\n        int maxi=INT_MIN;\n        while(!q.empty()){\n            int k=q.size();\n            for(int i=0;i<k;i++){\n                auto kl=q.front();\n                q.pop();\n                if(i==0){\n                    first=kl.second;\n                }\n                if(i==k-1){\n                    last=kl.second;\n                }\n                if(kl.first->left){\n                    q.push({kl.first->left,kl.second*2+1});\n                }\n                if(kl.first->right){\n                    q.push({kl.first->right,kl.second*2+2});\n                }\n            }\n            maxi=max(maxi,last-first+1);\n        }\n        return maxi;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000","title_slug":"maximum-width-of-binary-tree","has_notes":false,"flag_type":1}