{"id":1289803382,"question_id":206,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718516046,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1289803382/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"12 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if(head==NULL){\n            return head;\n        }\n        ListNode* i=head;\n        vector<int>l;\n        while(i!=NULL){\n            l.push_back(i->val);\n            i=i->next;\n        }\n        reverse(l.begin(),l.end());\n        ListNode* t=new ListNode(l[0]);\n        ListNode* u=t;\n        int v=1;\n        while(v<l.size()){\n            ListNode* f=new ListNode(l[v]);\n            t->next=f;\n            t=t->next;\n            v++;\n        }\n\n        return u;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}