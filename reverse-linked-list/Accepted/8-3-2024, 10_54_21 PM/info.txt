{"id":1343349070,"question_id":206,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1722705861,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1343349070/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"13.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (head == nullptr) return nullptr;\n\n        vector<int> res;\n        ListNode* current = head;\n        while (current != nullptr) {\n            res.push_back(current->val);\n            current = current->next;\n        }\n\n        reverse(res.begin(), res.end());\n\n        ListNode* newHead = new ListNode(res[0]);\n        ListNode* temp = newHead;\n        for (int i = 1; i < res.size(); i++) {\n            temp->next = new ListNode(res[i]);\n            temp = temp->next;\n        }\n        \n        return newHead;\n    }\n};\n","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}