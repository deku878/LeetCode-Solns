{"id":1310511968,"question_id":1275,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720187526,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/1310511968/","is_pending":"Not Pending","title":"Validate Binary Tree Nodes","memory":"36.2 MB","code":"class DSU\n{\n    public:\n    vector<int>parent;\n    DSU(int n)\n    {\n        parent.resize(n);\n        for(int i=0;i<n;i++)\n            parent[i]=i;\n    }\n    int Find(int x)\n    {\n        if(x!=parent[x])\n            parent[x]=Find(parent[x]);\n        return parent[x];\n    }\n    void Union(int a,int b)\n    {\n        parent[Find(a)]=Find(b);\n    }\n    int _components(int n)\n    {\n        unordered_set<int>_set;\n        for(int i=0;i<n;i++)\n            _set.insert(Find(i));\n        return _set.size();\n    }\n};\nclass Solution {\npublic:\n    bool validateBinaryTreeNodes(int n, vector<int>& l, vector<int>& r) \n    {\n        DSU dsu=DSU(n);\n        for(int i=0;i<n;i++)\n        {\n            if(l[i]!=-1)\n            {\n                int pa=dsu.Find(i);\n                int pb=dsu.Find(l[i]);\n                if(pa!=pb)\n                {\n                    dsu.Union(i,l[i]);\n                }\n                else\n                    return false;\n            }\n            if(r[i]!=-1)\n            {\n                int pa=dsu.Find(i);\n                int pb=dsu.Find(r[i]);\n                if(pa!=pb)\n                {\n                    dsu.Union(i,r[i]);\n                }\n                else\n                    return false;\n            }\n        }\n        vector<int>incom(n,0);\n        for(int i=0;i<n;i++)\n        {\n            if(l[i]!=-1)\n                incom[l[i]]++;\n            if(r[i]!=-1)\n                incom[r[i]]++;\n        }\n        for(int x:incom)\n            if(x>1)\n                return false;\n        return dsu._components(n)==1;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-tree-nodes","has_notes":false,"flag_type":1}