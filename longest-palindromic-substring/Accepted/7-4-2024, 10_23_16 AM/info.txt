{"id":1308955983,"question_id":5,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720068796,"status":10,"status_display":"Accepted","runtime":"857 ms","url":"/submissions/detail/1308955983/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"471.4 MB","code":"class Solution {\npublic:\n    bool ispal(string s){\n        int i=0;\n        int j=s.size()-1;\n        while(i<=j){\n            if(s[i]!=s[j]){\n                return false;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n    string longestPalindrome(string s) {\n        //expand around center approach\n        string x=\"\";\n        for(int i=0;i<s.size();i++){\n            //check for odd length\n            //check for even length\n            int i2=i;\n            int j2=i;\n            while(i2>=0 and j2<s.size()){\n                if(s[i2]==s[j2]){\n                    string t=s.substr(i2,j2-i2+1);\n                    if(t.size()>x.size()){\n                        x=t;\n                    }\n                    i2--;\n                    j2++;\n                }\n                else{\n                    break;\n                }\n            }\n            int i1=i;\n            int j1=i+1;\n            int count=0;\n            while(i1>=0 and j1<s.size()){\n                if(s[i1]==s[j1]){\n                    string t=s.substr(i1,j1-i1+1);\n                    if(t.size()>x.size()){\n                        x=t;\n                    }\n                    i1--;\n                    j1++;\n                }\n                else{\n                    break;\n                }\n            }\n        }\n        return x;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}