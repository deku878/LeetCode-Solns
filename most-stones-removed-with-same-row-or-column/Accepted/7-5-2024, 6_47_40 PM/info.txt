{"id":1310483070,"question_id":984,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720185460,"status":10,"status_display":"Accepted","runtime":"74 ms","url":"/submissions/detail/1310483070/","is_pending":"Not Pending","title":"Most Stones Removed with Same Row or Column","memory":"18.8 MB","code":"class Solution {\npublic:\n    vector<int> parent, rank, size;\n    \n    int find(int node) {\n        if (parent[node] != node) {\n            parent[node] = find(parent[node]); // Path compression\n        }\n        return parent[node];\n    }\n    \n    void unionSet(int u, int v) {\n        int root_u = find(u);\n        int root_v = find(v);\n        \n        if (root_u != root_v) {\n            // Union by rank\n            if (rank[root_u] > rank[root_v]) {\n                parent[root_v] = root_u;\n            } else if (rank[root_u] < rank[root_v]) {\n                parent[root_u] = root_v;\n            } else {\n                parent[root_v] = root_u;\n                rank[root_u]++;\n            }\n        }\n    }\n    \n    int removeStones(vector<vector<int>>& stones) {\n        int n = stones.size();\n        parent.resize(n);\n        rank.resize(n, 0);\n        \n        // Initialize parent pointers\n        for (int i = 0; i < n; ++i) {\n            parent[i] = i;\n        }\n        \n        // Union stones with the same row or column\n        for (int i = 0; i < n; ++i) {\n            for (int j = i + 1; j < n; ++j) {\n                if (stones[i][0] == stones[j][0] || stones[i][1] == stones[j][1]) {\n                    unionSet(i, j);\n                }\n            }\n        }\n        \n        // Count number of connected components\n        unordered_set<int> components;\n        for (int i = 0; i < n; ++i) {\n            components.insert(find(i));\n        }\n        \n        return n - components.size();\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-stones-removed-with-same-row-or-column","has_notes":false,"flag_type":1}