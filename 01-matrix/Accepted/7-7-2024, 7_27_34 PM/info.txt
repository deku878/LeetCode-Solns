{"id":1312914854,"question_id":542,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720360654,"status":10,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/1312914854/","is_pending":"Not Pending","title":"01 Matrix","memory":"38 MB","code":"class Solution {\npublic:\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        vector<vector<int>>dp(mat.size(),vector<int>(mat[0].size(),0));\n        vector<vector<int>>vis(mat.size(),vector<int>(mat[0].size(),0));\n        queue<pair<int,pair<int,int>>>q;\n        for(int i=0;i<mat.size();i++){\n            for(int j=0;j<mat[0].size();j++){\n                if(mat[i][j]==0){\n                q.push({0,{i,j}});\n                dp[i][j]=0;\n                vis[i][j]=1;}\n            }\n        }\n        while(!q.empty()){\n            auto x=q.front();\n            int dis=x.first;\n            int xc=x.second.first;\n            int yc=x.second.second;\n            q.pop();\n            int dx[4]={-1,0,1,0};\n            int dy[4]={0,-1,0,1};\n            for(int i=0;i<4;i++){\n                int nxc=xc+dx[i];\n                int nyc=yc+dy[i];\n                if(nxc>=0 and nxc<mat.size() and nyc>=0 and nyc<mat[0].size() and !vis[nxc][nyc]){\n                    q.push({dis+1,{nxc,nyc}});\n                    vis[nxc][nyc]=1;\n                    dp[nxc][nyc]=dis+1;\n                }\n            }\n        }\n        return dp;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix","has_notes":false,"flag_type":1}