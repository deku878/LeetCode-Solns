{"id":1329244545,"question_id":542,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1721633633,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/1329244545/","is_pending":"Not Pending","title":"01 Matrix","memory":"38.3 MB","code":"class Solution {\npublic:\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        queue<pair<int,pair<int,int>>>q;\n        vector<vector<int>>res(mat.size(),vector<int>(mat[0].size(),0));\n        vector<vector<int>>vis(mat.size(),vector<int>(mat[0].size(),0));\n        for(int i=0;i<mat.size();i++){\n            for(int j=0;j<mat[0].size();j++){\n                if(mat[i][j]==0){\n                    q.push({0,{i,j}});\n                    vis[i][j]=1;\n                }\n            }\n        }\n        while(!q.empty()){\n            auto x=q.front();\n            q.pop();\n            int ans=x.first;\n            int xc=x.second.first;\n            int yc=x.second.second;\n            int dx[4]={-1,0,1,0};\n            int dy[4]={0,1,0,-1};\n            for(int k=0;k<4;k++){\n                int nxc=xc+dx[k];\n                int nyc=yc+dy[k];\n                if(nxc>=0 and nxc<mat.size() and nyc>=0 and nyc<mat[0].size()){\n                    if(!vis[nxc][nyc]){\n                        res[nxc][nyc]=ans+1;\n                        q.push({ans+1,{nxc,nyc}});\n                        vis[nxc][nyc]=1;\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix","has_notes":false,"flag_type":1}