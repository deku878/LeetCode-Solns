{"id":1295508690,"question_id":542,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718964259,"status":10,"status_display":"Accepted","runtime":"63 ms","url":"/submissions/detail/1295508690/","is_pending":"Not Pending","title":"01 Matrix","memory":"37.9 MB","code":"class Solution {\npublic:\n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n        queue<pair<int,pair<int,int>>>q;\n        vector<vector<int>>m(mat.size(),vector<int>(mat[0].size()));\n        vector<vector<int>>vis(mat.size(),vector<int>(mat[0].size()));\n        m=mat;\n        for(int i=0;i<mat.size();i++){\n            for(int j=0;j<mat[0].size();j++){\n                if(mat[i][j]==0){\n                    q.push({0,{i,j}});\n                    vis[i][j]=1;\n                }\n            }\n        }\n        while(!q.empty()){\n            auto times=q.front();\n            int dis=times.first;\n            int idx1=times.second.first;\n            int idx2=times.second.second;\n            q.pop();\n            m[idx1][idx2]=dis;\n            int dx[4]={-1,0,1,0};\n            int dy[4]={0,-1,0,1};\n            for(int k=0;k<4;k++){\n                int nr=idx1+dx[k];\n                int nc=idx2+dy[k];\n                if(nr>=0 and nr<mat.size() and nc>=0 and nc<mat[0].size()){\n                    if(!vis[nr][nc] and mat[nr][nc]!=0){\n                        vis[nr][nc]=1;\n                        q.push({dis+1,{nr,nc}});\n                    }\n                }\n            }\n        }\n        return m;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"01-matrix","has_notes":false,"flag_type":1}