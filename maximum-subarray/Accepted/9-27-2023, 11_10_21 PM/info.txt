{"id":1060711677,"question_id":53,"lang":"cpp","lang_name":"C++","time":"12Â months","timestamp":1695836421,"status":10,"status_display":"Accepted","runtime":"86 ms","url":"/submissions/detail/1060711677/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"68.1 MB","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        long long int sum=0;\n        long long int maxsum=INT_MIN;\n        for(int i=0;i<nums.size();i++){\n            if(sum+nums[i]<0){\n                sum=0;\n            }\n            else{\n                 sum+=nums[i];\n            }\n            maxsum=max(maxsum,sum);\n        }\n        if(maxsum==0){\n            return *std::max_element(nums.begin(),nums.end());\n        }\n        return maxsum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}