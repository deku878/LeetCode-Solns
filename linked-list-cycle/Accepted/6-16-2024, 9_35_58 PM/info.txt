{"id":1290282837,"question_id":141,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718553958,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1290282837/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"10.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode *fast=head;\n        ListNode *slow=head;\n        while(fast!=NULL and fast->next!=NULL){\n            slow=slow->next;\n            fast=fast->next->next;\n            if(slow==fast){\n                return true;\n            }\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}