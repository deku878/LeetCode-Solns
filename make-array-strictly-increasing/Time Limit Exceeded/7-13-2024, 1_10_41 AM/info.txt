{"id":1319043148,"question_id":1290,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720813241,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1319043148/","is_pending":"Not Pending","title":"Make Array Strictly Increasing","memory":"N/A","code":"class Solution {\npublic:\n    int helper(int idx, int prev, vector<int> &arr1, vector<int> &arr2) {\n        //Base case\n        if(idx == arr1.size()) {\n            return 0;\n        }\n\n        //Explore all paths;\n        int replace = 1e9, not_replace = 1e9;\n\n        //Replace\n        int i = upper_bound(arr2.begin(), arr2.end(), prev) - arr2.begin();\n        if(i < arr2.size()) {\n            replace = 1 + helper(idx + 1, arr2[i], arr1, arr2);            \n        }\n\n        //Not replace\n        if(arr1[idx] > prev) {\n            not_replace = helper(idx + 1, arr1[idx], arr1, arr2);\n        }\n\n        return min(replace, not_replace);\n    }\npublic:\n    int makeArrayIncreasing(vector<int>& arr1, vector<int>& arr2) {\n        sort(arr2.begin(), arr2.end());\n        int res = helper(0, -1, arr1, arr2);\n        return res >= 1e9 ? -1 : res;\n    }\n};","compare_result":"1111111111111111111000","title_slug":"make-array-strictly-increasing","has_notes":false,"flag_type":1}