{"id":1305429632,"question_id":1442,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719809946,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/1305429632/","is_pending":"Not Pending","title":"Number of Operations to Make Network Connected","memory":"41.3 MB","code":"class Solution {\nvector<int>rank,parent;\npublic:\n    int find(int x){\n        if(parent[x]==x){\n            return x;\n        }\n        return parent[x]=find(parent[x]);\n    }\n    void union1(int x,int y){\n        int p1=find(x);\n        int p2=find(y);\n        if(p1==p2){\n            return;\n        }\n        if(rank[p2]<rank[p1]){\n            parent[p2]=p1;\n        }\n        else if(rank[p1]<rank[p2]){\n            parent[p1]=p2;\n        }\n        else{\n            parent[p1]=p2;\n            rank[p2]++;\n        }\n    }\n    int makeConnected(int n, vector<vector<int>>& x) {\n        parent.resize(n+1,0);\n        rank.resize(n+1,0);\n        for(int i=0;i<n;i++){\n            parent[i]=i;\n        }\n        int ex=0;\n        for(int i=0;i<x.size();i++){\n                if(find(x[i][0])==find(x[i][1])){\n                    ex++;\n                }\n                else{\n                    union1(x[i][0],x[i][1]);\n                }\n        }\n        int cnc=0;\n        for(int i=0;i<parent.size();i++){\n            if(parent[i]==i){\n                cnc++;\n            }\n        }\n        if(ex>=cnc-1){\n            return cnc-1;\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-operations-to-make-network-connected","has_notes":false,"flag_type":1}