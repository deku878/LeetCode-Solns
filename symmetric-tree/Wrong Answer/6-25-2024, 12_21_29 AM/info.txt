{"id":1299095502,"question_id":101,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719255089,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1299095502/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool iss(TreeNode* root,TreeNode*root1){\n        if(!root and !root1){\n            return true;\n        }\n        if(!root and root1){\n            return false;\n        }\n        if(root and !root1){\n            return false;\n        }\n        return (root->val==root->val) and iss(root->left,root1->right) and iss(root->right,root1->left);\n    }\n    bool isSymmetric(TreeNode* root) {\n        if(root==NULL or (!root->left and !root->right)){\n            return true;\n        }\n        return iss(root->left,root->right);\n    }\n};","compare_result":"1111111011111111101111111111001110111011011100110001101111001011011111110111111111101110111111101110111111110111101111101111111101111111111111101111101110110111111101111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}