{"id":1299107847,"question_id":101,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719256004,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1299107847/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"17.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool iss(TreeNode* root,TreeNode*root1){\n        if(!root and !root1){\n            return true;\n        }\n        if(root and !root1){\n            return false;\n        }\n        if(!root and root1){\n            return false;\n        }\n        return root->val==root1->val and iss(root->left,root1->right) and iss(root->right,root1->left) ;\n    }\n    bool isSymmetric(TreeNode* root) {\n        if(root==NULL or (!root->left and !root->right)){\n            return true;\n        }\n        return iss(root->left,root->right);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}