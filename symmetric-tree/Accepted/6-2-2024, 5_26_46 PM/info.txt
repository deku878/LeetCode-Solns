{"id":1275257743,"question_id":101,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1717329406,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1275257743/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"17.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool solve(TreeNode* left, TreeNode* right){\n        if(!left && !right) return true;\n        if(!left || !right) return false;\n        return (left->val == right->val && solve(left->left, right->right) && solve(left->right, right->left));\n    }\n    bool isSymmetric(TreeNode* root) {\n        return solve(root->left, root->right);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}