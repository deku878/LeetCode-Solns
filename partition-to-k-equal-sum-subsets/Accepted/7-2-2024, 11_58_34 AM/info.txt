{"id":1306697785,"question_id":698,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719901714,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/1306697785/","is_pending":"Not Pending","title":"Partition to K Equal Sum Subsets","memory":"59.7 MB","code":"class Solution {\npublic:\n    bool canPartitionKSubsets(vector<int>& nums, int k) {\n       long long int x=1<<16;\n       x+=2;\n       vector<int>dp(x,-1);\n       dp[0]=0;\n       int sum=0;\n       for(int i=0;i<nums.size();i++){\n        sum+=nums[i];\n       }\n       if(sum%k!=0){\n        return false;\n       }\n       sum/=k;\n       for(int mask=0;mask<(1<<nums.size());mask++){\n        if(dp[mask]==-1){\n            continue;\n        }\n        for(int i=0;i<nums.size();i++){\n            if(!(mask&(1<<i)) and dp[mask]+nums[i]<=sum){\n                dp[mask|(1<<i)]=(dp[mask]+nums[i])%sum;\n            }\n        }\n       }\n       return dp[(1<<nums.size())-1]==0;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-to-k-equal-sum-subsets","has_notes":false,"flag_type":1}