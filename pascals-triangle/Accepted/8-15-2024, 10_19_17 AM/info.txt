{"id":1356122983,"question_id":118,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1723697357,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1356122983/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"8.3 MB","code":"class Solution {\npublic:\n    vector<vector<int>> generate(int numRows) {\n           vector<vector<int>> rt;\n    \n    if (numRows >= 1) {\n        rt.push_back(vector<int>{1}); // First row\n    }\n    if (numRows >= 2) {\n        rt.push_back(vector<int>{1, 1}); // Second row\n    }\n    \n    for (int i = 2; i < numRows; ++i) {\n        vector<int> rty;\n        rty.push_back(1); // First element of the new row\n        \n        // Compute the intermediate elements\n        for (int j = 0; j < rt[i-1].size() - 1; ++j) {\n            rty.push_back(rt[i-1][j] + rt[i-1][j+1]);\n        }\n        \n        rty.push_back(1); // Last element of the new row\n        rt.push_back(rty);\n    }\n    \n    return rt;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"pascals-triangle","has_notes":false,"flag_type":1}