{"id":1308485822,"question_id":783,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720025338,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/1308485822/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"33.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        TreeNode* curr=root;\n        while(curr!=NULL){\n            if(curr->val==val){\n                return curr;\n            }\n            else if(curr->val>val){\n                curr=curr->left;\n            }\n            else{\n                curr=curr->right;\n            }\n        }\n        return curr;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}