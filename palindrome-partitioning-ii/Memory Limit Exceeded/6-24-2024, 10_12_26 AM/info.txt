{"id":1298366384,"question_id":132,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719204146,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1298366384/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"N/A","code":"class Solution {\npublic:\n      bool isp(string s, int i, int j) {\n        while (i < j) {\n            if (s[i] != s[j]) {\n                return false;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n\n    int res(int i, int j, vector<vector<long long int>>& dp, string s) {\n        if (i >= j) {\n            return 0;\n        }\n        if (dp[i][j] != -1) {\n            return dp[i][j];\n        }\n        if (isp(s, i, j)) {\n            return dp[i][j] = 0;\n        }\n        int minCuts = INT_MAX;\n        for (int k = i; k < j; k++) {\n            if (isp(s, i, k)) {\n                minCuts = min(minCuts, 1 + res(k + 1, j, dp, s));\n            }\n        }\n        return dp[i][j] = minCuts;\n    }\n\n    int minCut(string s) {\n        int n = s.size();\n        vector<vector<long long int>> dp(n, vector<long long int>(n, -1));\n        return res(0, n - 1, dp, s);\n    }\n\n};\n","compare_result":"1111111111111111111111111111111111110","title_slug":"palindrome-partitioning-ii","has_notes":false,"flag_type":1}