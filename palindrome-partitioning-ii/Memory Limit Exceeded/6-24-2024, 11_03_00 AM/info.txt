{"id":1298404594,"question_id":132,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719207180,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1298404594/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"N/A","code":"class Solution {\npublic:\nbool isp(int i,int j,string s){\n    while(i<j){\n        if(s[i]!=s[j]){\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\nint res(int i,int j,vector<int>&dp,string s){\n    if(i==s.size()){\n        return 0;\n    }\n    if(dp[i]!=-1){\n        return dp[i];\n    }\n    int maxm=INT_MAX;\n    for(int k=i;k<j;k++){\n        if(isp(i,k,s)){\n            maxm=min(maxm,1+res(k+1,s.size(),dp,s));\n        }\n    }\n    return dp[i]=maxm;\n}\nint minCut(string s) {\n        vector<int>dp(s.size(),-1);\n        int n=s.size();\n        return res(0,n,dp,s)-1;\n}\n};\n","compare_result":"1111111111111111111111111111111111110","title_slug":"palindrome-partitioning-ii","has_notes":false,"flag_type":1}