{"id":1298408085,"question_id":132,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719207441,"status":10,"status_display":"Accepted","runtime":"1753 ms","url":"/submissions/detail/1298408085/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"7.8 MB","code":"class Solution {\npublic:\n    bool isp(int i, int j, string &s) {\n        while (i < j) {\n            if (s[i] != s[j]) {\n                return false;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n\n    int res(int i, int j, vector<int>& dp, string &s) {\n        if (i == s.size()) {\n            return 0;\n        }\n        if (dp[i] != -1) {\n            return dp[i];\n        }\n        int minCuts = INT_MAX;\n        for (int k = i; k <= j; k++) {\n            if (isp(i, k, s)) {\n                minCuts = min(minCuts, 1 + res(k + 1, j, dp, s));\n            }\n        }\n        return dp[i] = minCuts;\n    }\n\n    int minCut(string s) {\n        int n = s.size();\n        vector<int> dp(n, -1);\n        return res(0, n - 1, dp, s) - 1;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111","title_slug":"palindrome-partitioning-ii","has_notes":false,"flag_type":1}