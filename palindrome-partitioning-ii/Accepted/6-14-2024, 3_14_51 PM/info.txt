{"id":1287964727,"question_id":132,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1718358291,"status":10,"status_display":"Accepted","runtime":"1746 ms","url":"/submissions/detail/1287964727/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"7.8 MB","code":"class Solution {\npublic:\nbool isPalindrome(int i, int j, string &s) {\n    while (i < j) {\n        if (s[i] != s[j]) return false;\n        i++;\n        j--;\n    }\n    return true;\n}\nint res(int i,int j,vector<int>&dp,string&a){\n    if(i==a.size()){\n        return 0;\n    }\n    if(dp[i]!=-1){\n        return dp[i];\n    }\n    long long int mini=INT_MAX;\n    for(int k=i;k<j;k++){\n        if(isPalindrome(i,k,a)){\n            long long int t=1+res(k+1,a.size(),dp,a);\n            mini=min(mini,t);\n        }\n    }\n    return dp[i]=mini;\n}\n    int minCut(string s) {\n        vector<int>dp(s.size(),-1);\n        int n=s.size();\n        return res(0,n,dp,s)-1;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111","title_slug":"palindrome-partitioning-ii","has_notes":false,"flag_type":1}