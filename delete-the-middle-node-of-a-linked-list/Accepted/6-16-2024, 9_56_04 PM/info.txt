{"id":1290299049,"question_id":2216,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718555164,"status":10,"status_display":"Accepted","runtime":"524 ms","url":"/submissions/detail/1290299049/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"298.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n       if(head->next==NULL){\n        return NULL;\n      }\n      ListNode* res=head;\n      ListNode* res1=head;\n      int n=0;\n      while(res1!=NULL){\n        res1=res1->next;\n        n++;\n      }\n      long long int cnt=1;\n      while(cnt<n/2){\n        res=res->next;\n        cnt++;\n      }\n      ListNode* p=res->next->next;\n      res->next=p;\n      return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}