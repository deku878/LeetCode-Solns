{"id":985571898,"question_id":162,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688410389,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/985571898/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n    int l = 1;\n    int r = nums.size() - 2;\n    int n = nums.size();\n\n    if (n == 1) {\n        return 0;\n    } else if (nums[0] > nums[1]) {\n        return 0;\n    } else if (nums[n - 1] > nums[n - 2]) {\n        return n - 1;\n    } else {\n        while (l <= r) {\n            int mid = l + (r - l) / 2;\n            int prev = mid - 1;\n            int next = mid + 1;\n            if (nums[mid] > nums[prev] && nums[mid] > nums[next]) {\n                return mid;\n            } else if (nums[mid] > nums[next]) {\n                r = mid - 1;\n            } else if (nums[mid] > nums[prev]) {\n                l = mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n};","compare_result":"111111111111111111111111111111111111110000000000000000000000000000","title_slug":"find-peak-element","has_notes":false,"flag_type":1}