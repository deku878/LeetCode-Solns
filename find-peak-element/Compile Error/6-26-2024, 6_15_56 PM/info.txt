{"id":1300876043,"question_id":162,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719405956,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1300876043/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n\t\tif(nums.length() == 1) return 0; // single element\n        \n        int n = nums.length;\n        \n\t\t// check if 0th/n-1th index is the peak element\n        if(nums[0] > nums[1]) return 0;\n        if(nums[n-1] > nums[n-2]) return n-1;\n\t\t\n\t\t// search in the remaining array\n        int start = 1;\n        int end = n-2;\n        \n        while(start <= end) {\n            int mid = start + (end - start)/2;\n            if(nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]) return mid;\n            else if(nums[mid] < nums[mid-1]) end = mid - 1;\n            else if(nums[mid] < nums[mid+1]) start = mid + 1;\n        }\n        return -1; // dummy return statement\n\n    }\n};","compare_result":null,"title_slug":"find-peak-element","has_notes":false,"flag_type":1}