{"id":985574325,"question_id":162,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688410588,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/985574325/","is_pending":"Not Pending","title":"Find Peak Element","memory":"8.8 MB","code":"class Solution {\npublic:\n        int findPeakElement(vector<int> &nums)\n    {\n        int n = nums.size();\n        int start = 0, end = n - 1;\n        while (start < end)\n        {\n            int mid = start + (end - start) / 2;\n            if (mid > 0 && mid < n - 1)\n            {\n                if (nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1])\n                    return mid;\n                else if (nums[mid - 1] > nums[mid])\n                    end = mid - 1;\n                else\n                    start = mid + 1;\n            }\n            else if (mid == 0)\n            {\n                if (nums[0] > nums[1])\n                    return 0;\n                else\n                    return 1;\n            }\n            else if (mid == n - 1)\n            {\n                if (nums[n - 1] > nums[n - 2])\n                    return n - 1;\n                else\n                    return n - 2;\n            }\n        }\n        return start;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-peak-element","has_notes":false,"flag_type":1}