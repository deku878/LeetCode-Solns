{"id":1266423814,"question_id":416,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1716533352,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1266423814/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        long long int sum=0;\n        for(int i=0;i<nums.size();i++){\n            sum+=nums[i];\n        }\n        vector<vector<long long int>>dp(nums.size()+1,vector<long long int>(sum+1,0));\n        for(int i=0;i<sum+1;i++){\n            dp[0][i]=0;\n        }\n        for(int i=0;i<nums.size()+1;i++){\n            dp[i][0]=1;\n        }\n        if(sum%2!=0){\n            return false;\n        }\n        for(int i=1;i<=nums.size();i++){\n            for(int j=1;j<=sum;j++){\n                if(nums[i-1]<=j){\n                dp[i][j]=dp[i-1][j]||dp[i][j-nums[i-1]];}\n                else{\n                    dp[i][j]=dp[i-1][j];\n                }\n            }\n        }\n        return dp[nums.size()][sum/2];\n    }\n};","compare_result":"11111100000111111111101111110011111000111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111110011011011011","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}