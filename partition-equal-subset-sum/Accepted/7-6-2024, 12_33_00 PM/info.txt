{"id":1311227042,"question_id":416,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720249380,"status":10,"status_display":"Accepted","runtime":"161 ms","url":"/submissions/detail/1311227042/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"184.3 MB","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        int sum=0;\n        for(int i=0;i<nums.size();i++){\n            sum+=nums[i];\n        }\n        if(sum%2!=0){\n            return false;\n        }\n        vector<vector<int>>dp(nums.size()+1,vector<int>(sum+1,0));\n        int n=nums.size();\n        for(int i=0;i<=nums.size();i++){\n            dp[i][0]=1;\n        }\n        \n        for(int i=1;i<=nums.size();i++){\n            for(int j=1;j<=sum;j++){\n                dp[i][j]=dp[i-1][j];\n                if(j-nums[i-1]>=0){\n                    dp[i][j]=dp[i][j]|dp[i-1][j-nums[i-1]];\n                }\n            }\n        }\n        return dp[n][sum/2];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}