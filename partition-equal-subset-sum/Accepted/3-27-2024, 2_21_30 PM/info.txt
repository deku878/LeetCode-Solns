{"id":1215245091,"question_id":416,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1711529490,"status":10,"status_display":"Accepted","runtime":"135 ms","url":"/submissions/detail/1215245091/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"47.2 MB","code":"class Solution {\npublic:\n    bool canPartition(vector<int>& nums) {\n        long long int sum=0;\n       \n        for(int i=0;i<nums.size();i++){\n            sum+=nums[i];\n        }\n        long long int dp[nums.size()+1][sum+1];\n        if(sum%2!=0){\n            return false;\n        }\n        else{\n            for(int i=0;i<nums.size()+1;i++){\n                for(int j=0;j<sum+1;j++){\n                    if(j==0){\n                        dp[i][j]=1;\n                    }\n                    else if(i==0){\n                        dp[i][j]=0;\n                    }\n                }\n            }\n            for(int i=1;i<nums.size()+1;i++){\n                for(int j=1;j<sum+1;j++){\n                    if(nums[i-1]<=j){\n                        dp[i][j]=dp[i-1][j-nums[i-1]]||dp[i-1][j];\n                    }\n                    else{\n                        dp[i][j]=dp[i-1][j];\n                    }\n                }\n            }\n        }\n        return dp[nums.size()][sum/2];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}