{"id":1310818873,"question_id":376,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720207327,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1310818873/","is_pending":"Not Pending","title":"Wiggle Subsequence","memory":"9.1 MB","code":"class Solution {\npublic:\n    int wiggleMaxLength(vector<int>& nums) {\n        int n=nums.size();\n        vector<int>pos(n,1),neg(n,1);\n        vector<int>dp(n,1);\n        for(int i=0;i<nums.size();i++){\n            for(int j=0;j<i;j++){\n                if((nums[i]-nums[j])>0){\n                    pos[i]=max(1+neg[j],pos[i]);\n                }\n                else if(nums[i]-nums[j]<0){\n                    neg[i]=max(1+pos[j],neg[i]);\n                }\n            }\n            dp[i]=max({dp[i],pos[i],neg[i]});\n        }\n        for(int i=0;i<n;i++){\n            cout<<pos[i]<<\" \";\n        }\n        cout<<endl;\n           for(int i=0;i<n;i++){\n            cout<<neg[i]<<\" \";\n        }\n        cout<<endl;\n         for(int i=0;i<n;i++){\n            cout<<dp[i]<<\" \";\n        }\n        cout<<endl;\n        return dp[n-1];\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"wiggle-subsequence","has_notes":false,"flag_type":1}