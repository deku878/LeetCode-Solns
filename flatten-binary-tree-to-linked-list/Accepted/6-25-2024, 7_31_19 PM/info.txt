{"id":1299889422,"question_id":114,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719324079,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1299889422/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"15.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void flatten(TreeNode* root) {\n        if(root==NULL){\n            return;\n        }\n        TreeNode*curr=root;\n        while(curr!=NULL){\n            if(curr->left!=NULL){\n                TreeNode* prev=curr->left;\n                while(prev->right!=NULL){\n                    prev=prev->right;\n                }\n                prev->right=curr->right;\n                curr->right=curr->left;\n                curr->left=NULL;\n            }\n            curr=curr->right;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}