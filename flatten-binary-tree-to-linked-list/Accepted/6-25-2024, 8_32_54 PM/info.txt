{"id":1299944471,"question_id":114,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719327774,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1299944471/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"16 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* prev=NULL;\n    void flatten(TreeNode* root) {\n        if(root==NULL){\n            return ;\n        }\n        TreeNode* curr=root;\n        stack<TreeNode*>st;\n        st.push(curr);\n        while(!st.empty()){\n            auto curr=st.top();\n            st.pop();\n            if(curr->right){\n                st.push(curr->right);\n            }\n            if(curr->left){\n                st.push(curr->left);\n            }\n            if(!st.empty()){\n            curr->right=st.top();}\n            curr->left=NULL;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}