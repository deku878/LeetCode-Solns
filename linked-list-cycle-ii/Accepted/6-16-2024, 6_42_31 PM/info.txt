{"id":1290148340,"question_id":142,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718543551,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/1290148340/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"12.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        map<ListNode*,ListNode*>mp;\n        ListNode* temp=head;\n        while(temp!=NULL){\n            \n            if(mp.count(temp)==0){\n                mp[temp]=temp;\n            }\n            else{\n                return mp[temp];\n            }\n            temp=temp->next;\n        }\n        return NULL;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}