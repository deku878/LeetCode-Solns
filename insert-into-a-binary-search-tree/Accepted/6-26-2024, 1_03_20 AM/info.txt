{"id":1300199516,"question_id":784,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719344000,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/1300199516/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"56 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* solve(TreeNode* node,int val){\n        if(node==NULL){\n            node=new TreeNode(val);\n            return node;\n        }\n        if(val<node->val){\n            node->left=solve(node->left,val);\n        }\n        else if(val>node->val){\n            node->right=solve(node->right,val);\n        }\n        return node;\n    }\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        return solve(root,val);\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree","has_notes":false,"flag_type":1}