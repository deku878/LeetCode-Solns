{"id":1300229102,"question_id":784,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719346662,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/1300229102/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"56.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insert(TreeNode* root,int val1){\n        if(root==NULL){\n            TreeNode* x=new TreeNode(val1);\n            return x;\n        }\n        if(val1<root->val){\n            root->left=insert(root->left,val1);\n        }\n        if(val1>root->val){\n            root->right=insert(root->right,val1);\n        }\n        return root;\n    }\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        return insert(root,val);\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree","has_notes":false,"flag_type":1}