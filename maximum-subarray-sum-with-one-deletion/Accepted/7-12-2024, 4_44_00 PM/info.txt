{"id":1318585842,"question_id":1288,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720782840,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/1318585842/","is_pending":"Not Pending","title":"Maximum Subarray Sum with One Deletion","memory":"36.8 MB","code":"class Solution {\npublic:\n       int maximumSum(vector<int>& arr) {\n        vector<vector<long long int>>dp(arr.size(),vector<long long int>(2,0));\n        dp[0][0]=INT_MIN;\n        dp[0][1]=arr[0];\n        long long int ans=arr[0];\n        for(int i=1;i<arr.size();i++){\n            long long int h=arr[i];\n            dp[i][0]=max(dp[i-1][1],dp[i-1][0]+h);\n            dp[i][1]=max(h,dp[i-1][1]+h);\n            ans=max({ans,dp[i][0],dp[i][1]});\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"maximum-subarray-sum-with-one-deletion","has_notes":false,"flag_type":1}