{"id":1000827972,"question_id":85,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1690022605,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/1000827972/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"22 MB","code":"class Solution {\npublic:\n   vector<int> nextsmaller(vector<int> arr, int n) {\n    stack<int> s;\n    s.push(-1);\n    vector<int> ans(n);\n    for (int i = n - 1; i >= 0; i--) {\n        int curr = arr[i];\n        while (s.top()!=-1 && arr[s.top()] >= curr) {\n            s.pop();\n        }\n        ans[i] = s.top();\n        s.push(i);\n    }\n    return ans;\n}\n\nvector<int> prevsmaller(vector<int> arr, int n) {\n    stack<int> s;\n    s.push(-1);\n    vector<int> ans(n);\n    for (int i = 0; i < n; i++) {\n        int curr = arr[i];\n        while (s.top()!=-1 && arr[s.top()] >= curr) {\n            s.pop();\n        }\n        ans[i] = s.top();\n        s.push(i);\n    }\n    return ans;\n}\n\n        int area(vector<int>heights){\n            int n=heights.size();\n            vector<int>prev(n);\n            prev=prevsmaller(heights,n);\n            vector<int>next(n);\n            next=nextsmaller(heights,n);\n            int sum=INT_MIN;\n            for(int i=0;i<n;i++){\n                int l=heights[i];\n                if(next[i]==-1){\n                    next[i]=n;\n                }\n                 int b=next[i]-prev[i]-1;\n                int newarea=l*b;\n                sum=max(sum,newarea);\n            }\n            return sum;\n        }\n    int maximalRectangle(vector<vector<char>>& matrix) {\n        vector<vector<int>> v(matrix.size());\n        for(int i=0;i<matrix.size();i++){\n            for(int j=0;j<matrix[i].size();j++){\n                if(matrix[i][j]=='0'){\n                    v[i].push_back(0);\n                }\n                else{\n                    v[i].push_back(1);\n                }\n            }\n        }\n        int maxarea=area(v[0]);\n        for(int i=1;i<matrix.size();i++){\n            for(int j=0;j<matrix[0].size();j++){\n                if(v[i][j]!=0){\n                    v[i][j]=v[i][j]+v[i-1][j];\n                }\n                else{\n                    v[i][j]=0;\n                }\n            }\n            maxarea=max(maxarea,area(v[i]));\n        }\n        return maxarea;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle","has_notes":false,"flag_type":1}