{"id":1319065641,"question_id":1367,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720815202,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1319065641/","is_pending":"Not Pending","title":"Maximum Height by Stacking Cuboids ","memory":"12.5 MB","code":"class Solution {\npublic:\n    int maxHeight(vector<vector<int>>& cuboids) {\n        int n = cuboids.size();\n        // sort every vector so that height is maximum in everyone\n        for (auto &c : cuboids)\n        {\n            sort(c.begin(), c.end());\n        }\n        // sorted so that we can use LIS\n        sort(cuboids.begin(), cuboids.end());\n        vector<int> dp(n, 0);\n        for (int i = 0; i < n; i++)\n        {\n            // height of that cuboid\n            dp[i] = cuboids[i][2];\n            for (int j = 0; j <= i - 1; j++)\n            {\n                if ((cuboids[i][0] >= cuboids[j][0]) && (cuboids[i][1] >= cuboids[j][1]) && (cuboids[i][2] >= cuboids[j][2]))\n                {\n                    dp[i] = max(dp[i], dp[j] + cuboids[i][2]);\n                }\n            }\n        }\n        int ans = *max_element(dp.begin(), dp.end());\n        return ans;\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-height-by-stacking-cuboids","has_notes":false,"flag_type":1}