{"id":1304244733,"question_id":1300,"lang":"cpp","lang_name":"C++","time":"2 months, 4 weeks","timestamp":1719700700,"status":10,"status_display":"Accepted","runtime":"355 ms","url":"/submissions/detail/1304244733/","is_pending":"Not Pending","title":"Critical Connections in a Network","memory":"162.8 MB","code":"class Solution {\n    public:\n    int timer = 1;\n    void dfs(int node,int parent,vector<int> adj[],vector<int>& vis,vector<int>& tin,vector<int>& low,vector<vector<int>>& bridges){\n        vis[node] = 1;\n        tin[node] = low[node] = timer; \n        timer++;\n        for(auto it : adj[node]){\n            if(it == parent) continue;\n\n            if(!vis[it]){\n                dfs(it,node,adj,vis,tin,low,bridges);\n                low[node] = min(low[node],low[it]);\n\n                // Can this edge (node--it) be a bridge?\n                if(low[it] > tin[node]) bridges.push_back({it,node});\n            }\n            else low[node] = min(low[node],tin[it]);\n        }\n    }\n\n\tvector<vector<int>> criticalConnections(int n, vector<vector<int>>& connections) {\n\n        vector<int> adj[n];\n        for(int i = 0 ; i < connections.size() ; i++){\n            int u = connections[i][0];\n            int v = connections[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n\n        vector<vector<int>> bridges;\n        vector<int> vis(n, 0);\n        vector<int> tin(n);\n        vector<int> low(n);\n        dfs(0,-1,adj,vis,tin,low,bridges);\n\n        return bridges;\n\t}\n\n};","compare_result":"11111111111111111","title_slug":"critical-connections-in-a-network","has_notes":false,"flag_type":1}