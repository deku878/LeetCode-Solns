{"id":1212742958,"question_id":221,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1711298618,"status":10,"status_display":"Accepted","runtime":"60 ms","url":"/submissions/detail/1212742958/","is_pending":"Not Pending","title":"Maximal Square","memory":"25.9 MB","code":"class Solution {\npublic:\n    int maximalSquare(vector<vector<char>>& matrix) {\n        if(matrix.empty()){\n            return 0;\n        }\n        long long int m=matrix.size(),n=matrix[0].size();\n        long long int sz=0;\n        vector<vector<long long int>> dp(m, vector<long long int>(n, 0));\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(!i or !j or matrix[i][j]=='0'){\n                    dp[i][j]=matrix[i][j]-'0';\n                }\n                else{\n                    dp[i][j]=1+min({dp[i-1][j],dp[i-1][j-1],dp[i][j-1]});\n                }\n                sz=max(dp[i][j],sz);\n            }\n        }\n        return sz*sz;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-square","has_notes":false,"flag_type":1}