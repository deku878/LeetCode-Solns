{"id":1305408507,"question_id":721,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719808457,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1305408507/","is_pending":"Not Pending","title":"Accounts Merge","memory":"N/A","code":"class Solution {\npublic:\nvector<int> parent, rank;\n\nint find(int x){\n    if(parent[x]==x){\n        return x;\n    }\n    return parent[x]=find(parent[x]);\n}\n\nvoid union1(int x_par, int y_par){\n    if(rank[x_par] > rank[y_par]){\n        parent[y_par] = x_par;\n    }\n    else if(rank[y_par] > rank[x_par]){\n        parent[x_par] = y_par;\n    }\n    else{\n        parent[x_par] = y_par;\n        rank[y_par]++;\n    }\n}\n\nvector<vector<string>> accountsMerge(vector<vector<string>>& accounts) {\n    parent.resize(accounts.size());\n    rank.resize(accounts.size());\n    for(int i = 0; i < accounts.size(); i++){\n        parent[i] = i;\n        rank[i] = 1;\n    }\n    \n    map<string, int> mp;\n    for(int i = 0; i < accounts.size(); i++){\n        for(int j = 1; j < accounts[i].size(); j++){\n            string x = accounts[i][j];\n            if(mp.find(x) == mp.end()){\n                mp[x] = i;\n            }\n            else{\n                union1(i, mp[x]);\n            }\n        }\n    }\n    \n    vector<vector<string>> adj(accounts.size());\n    for(auto m : mp){\n        int n = m.second;\n        int np = find(n);\n        adj[np].push_back(m.first);\n    }\n    \n    vector<vector<string>> x1;\n    for(int i = 0; i < accounts.size(); i++){\n        if(adj[i].empty()){\n            continue;\n        }\n        sort(adj[i].begin(), adj[i].end());\n        vector<string> x;\n        x.push_back(accounts[i][0]);\n        for(auto u : adj[i]){\n            x.push_back(u);\n        }\n        x1.push_back(x);\n    }\n    return x1;\n}\n};","compare_result":"11111110101011100100010010100000000000000000000000","title_slug":"accounts-merge","has_notes":false,"flag_type":1}