{"id":1310707192,"question_id":410,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720200027,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1310707192/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"9.1 MB","code":"class Solution {\npublic:\n    bool check(int a, int k, vector<int>& v) {\n        int sum = 0, cnt = 1;\n        for(auto x: v) {\n            if(x > a) return false;\n            sum += x;\n            if(sum > a)\n                sum = x, cnt++; \n        }\n        return cnt <= k;\n    }\n    int splitArray(vector<int>& nums, int k) {\n        int l = 0, h = accumulate(nums.begin(), nums.end(), 0);\n        while(l <= h) {\n            int mid = (l + h) >> 1;\n            if(check(mid, k, nums))\n                h = mid - 1;\n            else\n                l = mid + 1;\n        }\n\n        return l;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}