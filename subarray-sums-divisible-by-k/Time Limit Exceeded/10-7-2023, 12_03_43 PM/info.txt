{"id":1069135444,"question_id":1016,"lang":"cpp","lang_name":"C++","time":"11 months, 3 weeks","timestamp":1696660423,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1069135444/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"N/A","code":"class Solution {\npublic:\n    int subarraysDivByK(vector<int>& nums, int k) {\n    vector<long long int> pf(nums.size());\n    pf[0] = nums[0];\n    for(int i = 1; i < nums.size(); i++) {\n        pf[i] = pf[i - 1] + nums[i];\n    }\n    long long int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        for(int j = i; j < nums.size(); j++) {\n            if ((pf[j] - (i > 0 ? pf[i - 1] : 0)) % k == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111110000000","title_slug":"subarray-sums-divisible-by-k","has_notes":false,"flag_type":1}