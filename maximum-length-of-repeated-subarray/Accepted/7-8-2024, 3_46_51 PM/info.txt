{"id":1313824343,"question_id":718,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720433811,"status":10,"status_display":"Accepted","runtime":"117 ms","url":"/submissions/detail/1313824343/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"88 MB","code":"class Solution {\npublic:\n    int findLength(vector<int>& nums1, vector<int>& nums2) {\n        int n=nums1.size();\n        int m=nums2.size();\n        vector<vector<int>>dp(n+1,vector<int>(m+1,0));\n        int maxm=0;\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=m;j++){\n                if(nums1[i-1]==nums2[j-1]){\n                    dp[i][j]=1+dp[i-1][j-1];\n                }\n                else{\n                    dp[i][j]=0;\n                }\n                maxm=max(maxm,dp[i][j]);\n            }\n        }\n        //idk if it would work\n        //check1\n        return maxm;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}