{"id":1313221775,"question_id":2220,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720379542,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1313221775/","is_pending":"Not Pending","title":"Find All Possible Recipes from Given Supplies","memory":"N/A","code":"class Solution {\npublic:\n    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {\n        map<string,int>mp;\n        for(int i=0;i<supplies.size();i++){\n            mp[supplies[i]]++;\n        }\n        int n=recipes.size();\n        vector<string>adj[n];\n        for(int i=0;i<n;i++){\n            for(auto x:ingredients[i]){\n                adj[i].push_back(x);\n            }\n        }\n        vector<int>k;\n        for(int i=0;i<n;i++){\n            int x1=adj[i].size();\n            for(auto x:adj[i]){\n                if(mp.count(x)!=0){\n                    x1--;\n                }\n            }\n            if(x1<=0){\n                mp[recipes[i]]++;\n            }\n        }\n        for(int i=0;i<n;i++){\n            int x1=adj[i].size();\n            for(auto x:adj[i]){\n                if(mp.count(x)!=0){\n                    x1--;\n                }\n            }\n            if(x1<=0){\n                k.push_back(i);\n            }\n        }\n        vector<string>y;\n        for(int i=0;i<k.size();i++){\n            y.push_back(recipes[k[i]]);\n        }\n        return y;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111110000011011111111111111111111000000000000000000000000000000000001","title_slug":"find-all-possible-recipes-from-given-supplies","has_notes":false,"flag_type":1}