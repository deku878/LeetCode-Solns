{"id":1311860790,"question_id":1706,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720283017,"status":10,"status_display":"Accepted","runtime":"489 ms","url":"/submissions/detail/1311860790/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"134.5 MB","code":"class Solution {\npublic:\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        vector<vector<pair<int, int>>> adj_list(points.size(), vector<pair<int, int>>());\n        for(int i = 0 ; i < points.size(); i++) {\n            vector<int> curr = points[i];\n            for(int j = 0; j < points.size(); j++) {\n                if(j == i) continue;\n                adj_list[i].push_back({abs(curr[0] - points[j][0]) + abs(curr[1] - points[j][1]), j});\n            }\n        }\n\t\tpriority_queue<pair<int, int>, vector<pair<int, int> >, greater<pair<int, int>>> pq;\n        vector<int> visited(points.size(), 0);\n        pq.push({0, 0});\n        int ans = 0;\n        while(!pq.empty()) {\n            int curr = pq.top().second;\n            int wt = pq.top().first;\n            pq.pop();\n            if(visited[curr]) continue;\n            visited[curr] = true;\n            ans += wt;\n            for(pair<int, int> neighb: adj_list[curr]) {\n                if(visited[neighb.second]) continue;\n                pq.push(neighb);\n            }\n        }\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-to-connect-all-points","has_notes":false,"flag_type":1}