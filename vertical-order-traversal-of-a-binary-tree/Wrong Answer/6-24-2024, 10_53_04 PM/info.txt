{"id":1299010298,"question_id":1029,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719249784,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1299010298/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        queue<pair<int,TreeNode*>>q;\n        q.push({0,root});\n        map<int,vector<int>>mp;\n        while(!q.empty()){\n            int sz=q.size();\n            for(int i=0;i<sz;i++){\n                auto x=q.front();\n                q.pop();\n                if(x.second->left!=NULL){\n                    q.push({x.first-1,x.second->left});\n                }\n                if(x.second->right!=NULL){\n                    q.push({x.first+1,x.second->right});\n                }\n                mp[x.first].push_back(x.second->val);\n            }\n        }\n        vector<vector<int>>x;\n        for(auto m:mp){\n            sort(m.second.begin(),m.second.end());\n            x.push_back(m.second);\n        }\n        return x;\n    }\n};","compare_result":"1111111111100110100000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"flag_type":1}