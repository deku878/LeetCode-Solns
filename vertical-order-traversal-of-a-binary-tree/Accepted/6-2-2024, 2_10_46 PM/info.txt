{"id":1275098078,"question_id":1029,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1717317646,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1275098078/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"14.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        queue<pair<TreeNode*,pair<int,int>>>q;\n        map<int,map<int,multiset<int>>>mp;\n        q.push({root,{0,0}});\n        while(!q.empty()){\n            auto x=q.front();\n            q.pop();\n            int r=x.second.first;\n            int s=x.second.second;\n            TreeNode* lei=x.first;\n            mp[r][s].insert(lei->val);\n            if(x.first->left){\n                q.push({x.first->left,{r-1,s+1}});}\n            if(x.first->right){\n                q.push({x.first->right,{r+1,s+1}});\n            }\n        }\n        vector<vector<int>>lo;\n        for(auto d:mp){\n            vector<int>col;\n            for(auto x:d.second){\n                col.insert(col.end(),x.second.begin(),x.second.end());\n            }\n            lo.push_back(col);\n        }\n        return lo;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"flag_type":1}