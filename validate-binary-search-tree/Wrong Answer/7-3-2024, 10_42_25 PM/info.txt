{"id":1308512652,"question_id":98,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720026745,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1308512652/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool checker(TreeNode* root,int maxi,int mini){\n        if(root==NULL){\n            return true;\n        }\n        if(root->val>=maxi or root->val<=mini){\n            return false;\n        }\n        return checker(root->left,root->val,mini) and checker(root->right,maxi,root->val);\n    }\n    bool isValidBST(TreeNode* root) {\n        if(root==NULL or (root->left==NULL and root->right==NULL)){\n            return true;\n        }\n        int maxi=INT_MAX;\n        int mini=INT_MIN;\n        return checker(root,maxi,mini);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111010101110011110111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}