{"id":1300253187,"question_id":98,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719349159,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1300253187/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if(root==NULL){\n            return true;\n        }\n        if(root->left!=NULL and root->right!=NULL){\n            return (root->val>root->left->val) and (root->val<root->right->val);\n        }\n        else if(root->left==NULL){\n            return root->val<root->right->val;\n        }\n        else if(root->right==NULL){\n            return root->val>root->left->val;\n        }\n        return isValidBST(root->left) and isValidBST(root->right);\n    }\n};","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}