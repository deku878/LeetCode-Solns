{"id":1300255175,"question_id":98,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719349383,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1300255175/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"20.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBSTHelper(TreeNode* root, long minVal, long maxVal) {\n    if (root == NULL) {\n        return true;\n    }\n    if (root->val <= minVal || root->val >= maxVal) {\n        return false;\n    }\n    return isValidBSTHelper(root->left, minVal, root->val) &&\n           isValidBSTHelper(root->right, root->val, maxVal);\n}\n\nbool isValidBST(TreeNode* root) {\n    return isValidBSTHelper(root, LONG_MIN, LONG_MAX);\n}\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}