{"id":1295496733,"question_id":1036,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718963376,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1295496733/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"N/A","code":"class Solution {\npublic:\n    int orangesRotting(vector<vector<int>>& grid) {\n        vector<vector<int>>vis(grid.size(),vector<int>(grid[0].size(),0));\n        queue<pair<int,pair<int,int>>>q;\n        for(int i=0;i<grid.size();i++){\n            for(int j=0;j<grid[0].size();j++){\n                if(grid[i][j]==2){\n                    q.push({0,{i,j}});\n                    vis[i][j]=1;\n                }\n            }\n        }\n       int ti=-1;\n       while(!q.empty()){\n        auto x=q.front();\n        int ro=x.second.first;\n        int co=x.second.second;\n        int times=x.first;\n        ti=times;\n        q.pop();\n        int dx[4]={-1,0,1,0};\n        int dy[4]={0,-1,0,1};\n        for(int k=0;k<4;k++){\n            int new_ro=ro+dx[k];\n            int new_co=co+dy[k];\n           if(new_ro>=0 and new_ro<grid.size() and new_co>=0 and new_co<grid[0].size()){\n            if(grid[new_ro][new_co]==1 and !vis[new_ro][new_co]){\n                vis[new_ro][new_co]=1;\n                q.push({times+1,{new_ro,new_co}});\n            }\n        }\n        }\n        }\n        for(int i=0;i<vis.size();i++){\n            for(int j=0;j<vis[0].size();j++){\n                if(!vis[i][j] and grid[i][j]==1){\n                    return -1;\n                }\n            }\n        }\n        return ti;\n    }\n};","compare_result":"111011101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}