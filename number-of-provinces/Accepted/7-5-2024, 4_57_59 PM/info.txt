{"id":1310396120,"question_id":547,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720178879,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1310396120/","is_pending":"Not Pending","title":"Number of Provinces","memory":"19.6 MB","code":"class Solution {\npublic:\n    void dfs(vector<int>adj[],vector<int>&vis,int node,int par){\n        vis[node]=1;\n        for(auto y:adj[node]){\n            if(!vis[y]){\n                dfs(adj,vis,y,node);\n            }\n        }\n    }\n    int findCircleNum(vector<vector<int>>& iy) {\n        int n=iy.size();\n        vector<int>adj[n];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(iy[i][j]==1){\n                    adj[i].push_back(j);\n                    adj[j].push_back(i);\n                }\n            }\n        }\n        vector<int>vis(n,0);\n        int cnt=0;\n        for(int i=0;i<n;i++){\n            if(!vis[i]){\n                cnt++;\n                dfs(adj,vis,i,-1);\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}