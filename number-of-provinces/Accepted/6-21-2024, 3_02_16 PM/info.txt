{"id":1295482709,"question_id":547,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718962336,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/1295482709/","is_pending":"Not Pending","title":"Number of Provinces","memory":"18.9 MB","code":"class Solution {\npublic:\n    void dfs(vector<vector<int>>&x,vector<int>&vis,int vertex){\n        vis[vertex]=1;\n        for(auto k:x[vertex]){\n            if(!vis[k]){\n                dfs(x,vis,k);\n            }\n        }\n    }\n    int findCircleNum(vector<vector<int>>& is) {\n        vector<vector<int>>adj(is.size(),vector<int>());\n        for(int i=0;i<is.size();i++){\n            for(int j=0;j<is[0].size();j++){\n                if(i!=j and is[i][j]==1){\n                    adj[i].push_back(j);\n                }\n            }\n        }\n        int cnt=0;\n        vector<int>vis(is.size(),0);\n        for(int i=0;i<adj.size();i++){\n            if(!vis[i]){\n                dfs(adj,vis,i);\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}