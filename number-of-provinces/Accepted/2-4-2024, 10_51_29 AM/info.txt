{"id":1165536026,"question_id":547,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1707024089,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1165536026/","is_pending":"Not Pending","title":"Number of Provinces","memory":"19.9 MB","code":"class Solution {\npublic:\n    void dfs(int j,vector<bool> &vis,vector<int> adj[]){\n        vis[j]=true;\n        for(auto x:adj[j]){\n            if(!vis[x]){\n                dfs(x,vis,adj);\n            }\n        }\n    }\n    int findCircleNum(vector<vector<int>>& v) {\n        int n=(int)v.size();\n        const int N=444;\n        vector<int> adj[N];\n        vector<bool> vis(N);\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(v[i][j]==1 and i!=j){\n                    adj[i].push_back(j);\n                }\n            }\n        }\n        vis.assign(n+4,false);\n        int cnt=0;\n        for(int i=0;i<n;i++){\n            if(!vis[i]){\n                dfs(i,vis,adj);\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}