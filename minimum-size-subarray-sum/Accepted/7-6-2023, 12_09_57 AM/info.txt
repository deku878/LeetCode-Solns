{"id":987192950,"question_id":209,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688582397,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/987192950/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"28.1 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n    int n = nums.size();\n    int minLength = INT_MAX;\n    int sum = 0;\n    int left = 0;\n    \n    for (int right = 0; right < n; right++) {\n        sum += nums[right];\n        \n        while (sum >= target) {\n            minLength = min(minLength, right - left + 1);\n            sum -= nums[left];\n            left++;\n        }\n    }\n    \n    return (minLength == INT_MAX) ? 0 : minLength;\n}\n};","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}