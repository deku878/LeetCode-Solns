{"id":1342551405,"question_id":1119,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1722662399,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1342551405/","is_pending":"Not Pending","title":"Robot Bounded In Circle","memory":"N/A","code":"class Solution {\npublic:\n    bool isRobotBounded(string s) {\n        //north-positive\n        //south-negative\n        //east-positive\n        //west-negative\n        int x1=0;\n        int x2=0;\n        int inv=0;\n        vector<char>lo={'N','E','S','W'};\n        int idx=0;\n        bool y=true;\n        bool x=false;\n        map<pair<int,int>,int>mp;\n        int n=s.size();\n        for(int i=0;i<n;i++){\n            if(s[i]=='G'){\n              idx=(lo.size()+inv)%(lo.size());\n              cout<<idx<<endl;\n              if(lo[idx]=='N'){\n                x2++;\n                mp[{x1,x2}]++;\n                \n              }\n              else if(lo[idx]=='W'){\n                x1--;\n                mp[{x1,x2}]++;\n              }\n              else if(lo[idx]=='E'){\n                x1++;\n                mp[{x1,x2}]++;\n              }\n              else{\n                x2--;\n                mp[{x1,x2}]++;\n              }\n            }\n            else if(s[i]=='L'){\n            inv-=1;\n            }\n            else{\n            inv+=1;\n            }\n             idx=(lo.size()+inv)%(lo.size());\n            if(x1==0 and x2==0){\n                return true;\n            }\n            else if(idx!=0){\n                return true;\n            }\n        }\n        for(auto m:mp){\n            cout<<m.first.first<<\" \"<<m.first.second<<endl;\n        }\n        return false;\n    }\n};","compare_result":"111110111111111010111111111111111111111111111111111111111111111111111101011101110111010111110111111111111111000000110","title_slug":"robot-bounded-in-circle","has_notes":false,"flag_type":1}