{"id":1300698635,"question_id":450,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719392609,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/1300698635/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"32.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* deletex(TreeNode* root,int key){\n        if(root==NULL){\n            return NULL;\n        }\n        if(key>root->val){\n            root->right=deletex(root->right,key);\n        }\n        else if(key<root->val){\n            root->left=deletex(root->left,key);\n        }\n        else{\n            if(root->left==NULL){\n                return root->right;\n            }\n            else if(root->right==NULL){\n                return root->left;\n            }\n            else{\n                TreeNode* temp=root->right;\n                while(temp->left!=NULL){\n                    temp=temp->left;\n                }\n                root->val=temp->val;\n                root->right=deletex(root->right,temp->val);\n            }\n        }\n        return root;\n    }\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        return deletex(root,key);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}