{"id":1307438975,"question_id":543,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719945779,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1307438975/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"22.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nint dia=INT_MIN;\npublic:\n    int ans(TreeNode* root){\n        if(root==NULL){\n            return NULL;\n        }\n        int lh=ans(root->left);\n        int rh=ans(root->right);\n        dia=max(dia,lh+rh);\n        return max(lh,rh)+1;\n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        dia=INT_MIN;\n        if(root==NULL){\n            return 0;\n        }\n        ans(root);\n        return dia;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}