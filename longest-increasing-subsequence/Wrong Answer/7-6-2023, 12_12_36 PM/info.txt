{"id":987550883,"question_id":300,"lang":"cpp","lang_name":"C++","time":"1 year, 2 months","timestamp":1688625756,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/987550883/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int p;\n        int c=INT_MIN;\n       if(count(nums.begin(),nums.end(),nums[0])==nums.size()){\n           return 1;\n       }\n       else{\n           int low=0;\n           int high=nums.size()-1;\n           while(low<=high){\n               int max1=nums[low];\n               int count1=1;\n           for(int i=low+1;i<=high;i++){\n               if(nums[i]>max1 and count(nums.begin(),nums.end(),nums[i])==1){\n                   max1=nums[i];\n                   count1++;\n               }\n               else if(nums[i]>max1 and count(nums.begin(),nums.end(),nums[i])>1){\n                   nums[i]=-1;\n               }\n                p=count1;\n               }\n              c=max(p,c);\n               low++;\n           }\n       }\n       return c;\n    }\n};","compare_result":"111111111111011010101000000000000000000000000000000000","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}