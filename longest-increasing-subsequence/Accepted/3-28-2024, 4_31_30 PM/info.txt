{"id":1216297580,"question_id":300,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1711623690,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/1216297580/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"13.5 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        long long int n=nums.size();\n        vector<long long int>dp(n,1);\n        for(int i=0;i<n;i++){\n            for(int j=0;j<i;j++){\n                if(nums[i]>nums[j]){\n                    dp[i]=max(1+dp[j],dp[i]);\n                }\n            }\n        }\n        sort(dp.begin(),dp.end());\n        return dp[dp.size()-1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}