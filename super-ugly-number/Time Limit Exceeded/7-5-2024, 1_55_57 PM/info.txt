{"id":1310244755,"question_id":313,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720167957,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1310244755/","is_pending":"Not Pending","title":"Super Ugly Number","memory":"N/A","code":"class Solution {\npublic:\n    int nthSuperUglyNumber(int n, vector<int>& primes) {\n        vector<int> ugly(n, 0);\n        set<long long> candidates;  // Use a set to keep potential ugly numbers\n        \n        ugly[0] = 1;  // The first ugly number is always 1\n        \n        // Initialize the set with the first multiples of each prime\n        for (int prime : primes) {\n            candidates.insert(prime);\n        }\n        \n        for (int i = 1; i < n; ++i) {\n            ugly[i] = *candidates.begin();  // Get the smallest candidate\n            candidates.erase(candidates.begin());  // Remove it from the set\n            \n            // Insert new potential ugly numbers into the set\n            for (int prime : primes) {\n                long long newUgly = static_cast<long long>(ugly[i]) * prime;\n                if (newUgly > 0) {  // Ensure there is no overflow\n                    candidates.insert(newUgly);\n                }\n            }\n        }\n        \n        return ugly[n - 1];\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"super-ugly-number","has_notes":false,"flag_type":1}