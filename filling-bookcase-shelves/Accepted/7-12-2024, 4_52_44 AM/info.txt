{"id":1318088357,"question_id":1196,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720740164,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1318088357/","is_pending":"Not Pending","title":"Filling Bookcase Shelves","memory":"10.9 MB","code":"class Solution {\npublic:\n    int minHeightShelves(vector<vector<int>>& books, int shelf_width) {\n        //books i thickness,height\n        //shelfwidth\n        //total width shelfwidth\n        // is a variation of knapsack\n        vector<int>dp(books.size()+1,INT_MAX);\n        dp[0]=0;\n        for(int j=1;j<=books.size();j++){\n            int curw=0;\n            int curh=0;\n            int k=1;\n            while(k<=j){\n                curh=max(curh,books[j-k][1]);\n                curw+=books[j-k][0];\n                if(curw>shelf_width){\n                    break;\n                }\n                dp[j]=min(dp[j],dp[j-k]+curh);\n                k++;\n            }\n        }\n        return dp[books.size()];\n    }\n};","compare_result":"11111111111111111111","title_slug":"filling-bookcase-shelves","has_notes":false,"flag_type":1}