{"id":1307223007,"question_id":8,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1719934300,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1307223007/","is_pending":"Not Pending","title":"String to Integer (atoi)","memory":"N/A","code":"class Solution {\npublic:\n    int myAtoi(string s) {\n        //base cases\n        //first check if the character at the 0th index\n        bool check=false;\n        int index=0;\n        long long int maximum=INT_MAX;\n        long long int minimum=INT_MIN;\n        while(index<s.size() and s[index]==' '){\n            index++;\n        }\n        long long int ans=0;\n        if(s[index]=='-'){\n            index++;\n            while(index<s.size() and s[index]=='0'){\n                index++;\n            }\n            long long int curr=0;\n            for(int i=index;i<s.size();i++){\n                if(s[i]>='1' and s[i]<='9'){\n                    int val=s[i]-'0';\n                    curr=curr*10;\n                    curr=curr+val;\n                }\n                else{\n                    break;\n                }\n            }\n            curr=curr*(-1);\n            ans=curr;\n        }\n        else{\n            while(index<s.size() and s[index]=='0'){\n                index++;\n            }\n            long long int curr=0;\n            for(int i=index;i<s.size();i++){\n                if(s[i]>='1' and s[i]<='9'){\n                    int val=s[i]-'0';\n                    curr=curr*10;\n                    curr=curr+val;\n                }\n                else{\n                    break;\n                }\n            }\n            ans=curr;\n        }\n        if(ans>=maximum){\n            return maximum;\n        }\n        if(ans<=minimum){\n            return minimum;\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"string-to-integer-atoi","has_notes":false,"flag_type":1}