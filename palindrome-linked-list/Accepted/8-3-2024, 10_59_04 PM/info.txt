{"id":1343354592,"question_id":234,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1722706144,"status":10,"status_display":"Accepted","runtime":"175 ms","url":"/submissions/detail/1343354592/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"131 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        vector<int>res;\n        while(head!=NULL){\n            res.push_back(head->val);\n            head=head->next;\n        }\n        int i=0,j=res.size()-1;\n        while(i<j){\n            if(res[i]!=res[j]){\n                return false;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}