{"id":1289796399,"question_id":234,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1718515511,"status":10,"status_display":"Accepted","runtime":"163 ms","url":"/submissions/detail/1289796399/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"130.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool is(vector<int>&p){\n        int i=0;\n        int j=p.size()-1;\n        while(i<j){\n            if(p[i]!=p[j]){\n                return false;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n    bool isPalindrome(ListNode* head) {\n        vector<int>x;\n        ListNode* h=head;\n        while(h!=NULL){\n            x.push_back(h->val);\n            h=h->next;\n        }\n        return is(x);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"flag_type":1}