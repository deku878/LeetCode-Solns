{"id":1311520649,"question_id":1431,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720270140,"status":10,"status_display":"Accepted","runtime":"366 ms","url":"/submissions/detail/1311520649/","is_pending":"Not Pending","title":"All Ancestors of a Node in a Directed Acyclic Graph","memory":"144.3 MB","code":"class Solution {\npublic:\n    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {\n        vector<int>deg(n,0);\n        vector<vector<int>>adj(n);\n        for(auto& e:edges){\n            int v=e[0];\n            int w=e[1];\n            adj[v].push_back(w);\n            deg[w]++;\n        }\n        queue<int>q;\n        for(int i=0;i<n;i++){\n            if(deg[i]==0){\n                q.push(i);\n            }\n        }\n        vector<set<int>>ancestor(n);\n        while(!q.empty()){\n            int v=q.front();\n            q.pop();\n            for(int w:adj[v]){\n                ancestor[w].insert(v);\n                ancestor[w].insert(ancestor[v].begin(),ancestor[v].end());\n                deg[w]--;\n                if(deg[w]==0){\n                    q.push(w);\n                }\n            }\n        }\n        vector<vector<int>>ans(n);\n        for(int i=0;i<n;i++){\n            ans[i]=vector<int>(ancestor[i].begin(),ancestor[i].end());\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"all-ancestors-of-a-node-in-a-directed-acyclic-graph","has_notes":false,"flag_type":1}