{"id":1321805552,"question_id":2114,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1721048874,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1321805552/","is_pending":"Not Pending","title":"Minimum Number of Work Sessions to Finish the Tasks","memory":"N/A","code":"class Solution {\npublic:\n    int mint(vector<vector<int>>& dp, vector<int>& tasks, int sessionTime, int currentSum, int index, int sessions) {\n        if (index >= tasks.size()) {\n            return sessions;\n        }\n        if (dp[index][currentSum] != -1) {\n            return dp[index][currentSum];\n        }\n\n        // Try to add the current task to the current session\n        int ans = INT_MAX;\n        if (currentSum + tasks[index] <= sessionTime) {\n            ans = mint(dp, tasks, sessionTime, currentSum + tasks[index], index + 1, sessions);\n        }\n\n        // Or start a new session with the current task\n        ans = min(ans, mint(dp, tasks, sessionTime, tasks[index], index + 1, sessions + 1));\n        \n        return dp[index][currentSum] = ans;\n    }\n\n    int minSessions(vector<int>& tasks, int sessionTime) {\n        int n = tasks.size();\n        vector<vector<int>> dp(n + 1, vector<int>(sessionTime + 1, -1));\n        return mint(dp, tasks, sessionTime, 0, 0, 1);\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111101101111111111100000000011010001000000000101000010111","title_slug":"minimum-number-of-work-sessions-to-finish-the-tasks","has_notes":false,"flag_type":1}