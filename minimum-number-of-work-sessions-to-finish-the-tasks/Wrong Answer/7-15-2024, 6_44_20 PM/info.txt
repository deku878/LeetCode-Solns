{"id":1321811058,"question_id":2114,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1721049260,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1321811058/","is_pending":"Not Pending","title":"Minimum Number of Work Sessions to Finish the Tasks","memory":"N/A","code":"class Solution {\npublic:\n    int mint(vector<int>& tasks, int sessionTime, int index, vector<int>& dp) {\n        if (index >= tasks.size()) {\n            return 0;\n        }\n        if (dp[index] != -1) {\n            return dp[index];\n        }\n\n        int minSessions = INT_MAX;\n        int currentSum = 0;\n        \n        for (int i = index; i < tasks.size(); ++i) {\n            currentSum += tasks[i];\n            if (currentSum <= sessionTime) {\n                // Recursively find the minimum sessions starting from the next task\n                minSessions = min(minSessions, 1 + mint(tasks, sessionTime, i + 1, dp));\n            }\n            else{\n                break;\n            }\n        }\n\n        return dp[index] = minSessions;\n    }\n\n    int minSessions(vector<int>& tasks, int sessionTime) {\n        int n = tasks.size();\n        vector<int> dp(n, -1); // dp[i] will store the minimum sessions starting from task i\n        return mint(tasks, sessionTime, 0, dp);\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111101101111111111100000000011010001000000000101000010111","title_slug":"minimum-number-of-work-sessions-to-finish-the-tasks","has_notes":false,"flag_type":1}