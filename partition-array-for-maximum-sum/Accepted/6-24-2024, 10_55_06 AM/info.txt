{"id":1298398416,"question_id":1121,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719206706,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1298398416/","is_pending":"Not Pending","title":"Partition Array for Maximum Sum","memory":"10.9 MB","code":"class Solution {\npublic:\n    int res(int i,vector<int>&dp,vector<int>&arr,int k){\n        if(i==arr.size()){\n            return 0;\n        }\n        if(dp[i]!=-1){\n            return dp[i];\n        }\n        int len=0;\n        int maxm=INT_MIN;\n        int sum=INT_MIN;\n        for(int r=i;r<min(i+k,(int)arr.size());r++){\n            len++;\n            maxm=max(maxm,arr[r]);\n            sum=max(len*maxm+res(r+1,dp,arr,k),sum);\n        }\n        return dp[i]=sum;\n    }\n    int maxSumAfterPartitioning(vector<int>& arr, int k) {\n        vector<int>dp(arr.size(),-1);\n        return res(0,dp,arr,k);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"partition-array-for-maximum-sum","has_notes":false,"flag_type":1}