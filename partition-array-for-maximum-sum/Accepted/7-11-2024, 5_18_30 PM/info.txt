{"id":1317514941,"question_id":1121,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720698510,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1317514941/","is_pending":"Not Pending","title":"Partition Array for Maximum Sum","memory":"11 MB","code":"class Solution {\npublic:\n       int t[501];\n    int solve(vector<int>& ip,int ind,int n,int k){\n        if(ind>=n){\n            return 0;\n        }\n        if(t[ind]!=-1){\n            return t[ind];\n        }\n        int ans=INT_MIN;\n        int ans1=INT_MIN;\n        for(int i=ind;i<min(ind+k,n);i++){\n            ans=max(ip[i],ans);\n            ans1=max(ans1,(i-ind+1)*(ans)+solve(ip,i+1,n,k));\n        }\n        return t[ind]=ans1;\n    }\n    int maxSumAfterPartitioning(vector<int>& arr, int k) {\n        int n=arr.size();\n        memset(t,-1,sizeof(t));\n        return solve(arr,0,n,k);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"partition-array-for-maximum-sum","has_notes":false,"flag_type":1}