{"id":1298393410,"question_id":1121,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719206334,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1298393410/","is_pending":"Not Pending","title":"Partition Array for Maximum Sum","memory":"11 MB","code":"class Solution {\npublic:\n    int pl(int i,vector<int>&dp,vector<int>&a,int k){\n        if(i==dp.size()){\n            return 0;\n        }\n        if(dp[i]!=-1){\n            return dp[i];\n        }\n        int len=0;\n        int maxm=INT_MIN;\n        int su=INT_MIN;\n        for(int r=i; r < min(i+k,(int)a.size());r++){\n            len++;\n            maxm=max(maxm,a[r]);\n            su=max(len*maxm+pl(r+1,dp,a,k),su);\n        }\n        return dp[i]=su;\n    }\n    int maxSumAfterPartitioning(vector<int>& arr, int k) {\n        vector<int>dp(arr.size(),-1);\n        return pl(0,dp,arr,k);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"partition-array-for-maximum-sum","has_notes":false,"flag_type":1}