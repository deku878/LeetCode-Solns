{"id":1309566634,"question_id":922,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720109199,"status":10,"status_display":"Accepted","runtime":"125 ms","url":"/submissions/detail/1309566634/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"67.2 MB","code":"class Solution {\npublic:\n    bool bich(vector<int>adj[],vector<int>&color,int node,int par){\n        if(color[node]==-1){\n            color[node]=1;\n        }\n        for(auto x:adj[node]){\n            if(x!=par){\n                if(color[x]==-1){\n                    color[x]=1-color[node];\n                    if(!bich(adj,color,x,node)){\n                        return false;\n                    }\n                }\n                else if(color[x]==color[node]){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    bool possibleBipartition(int n, vector<vector<int>>& d) {\n        vector<int>adj[n];\n        for(int i=0;i<d.size();i++){\n            adj[d[i][0]-1].push_back(d[i][1]-1);\n            adj[d[i][1]-1].push_back(d[i][0]-1);\n        }\n        vector<int>color(n,-1);\n        for(int i=0;i<n;i++){\n            if(color[i]==-1){\n                if(!bich(adj,color,i,-1)){\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"possible-bipartition","has_notes":false,"flag_type":1}