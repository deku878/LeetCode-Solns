{"id":1298794098,"question_id":94,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719236105,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1298794098/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>res;\n    void preorder(TreeNode* root){\n        if(root==NULL){\n            return;\n        }\n        \n        preorder(root->left);\n        res.push_back(root->val);\n        preorder(root->right);\n    }\n    vector<int> inorderTraversal(TreeNode* root) {\n        res.clear();\n        preorder(root);\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}