{"id":1299835737,"question_id":94,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719320331,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1299835737/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int>inorder;\n        TreeNode* curr=root;\n        while(curr){\n            if(curr->left==NULL){\n                inorder.push_back(curr->val);\n                curr=curr->right;\n            }\n            else{\n                TreeNode* prev=curr->left;\n                while(prev->right and prev->right!=curr){\n                    prev=prev->right;\n                }\n                if(prev->right==NULL){\n                    prev->right=curr;\n                    curr=curr->left;\n                }\n                else{\n                    inorder.push_back(curr->val);\n                    prev->right=NULL;\n                    curr=curr->right;\n                }\n            }\n        }\n        return inorder;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}