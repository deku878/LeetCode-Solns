{"id":1309082571,"question_id":87,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1720076743,"status":10,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/1309082571/","is_pending":"Not Pending","title":"Scramble String","memory":"38.1 MB","code":"class Solution {\npublic:\n    unordered_map<string, bool> mp;\n\n    bool rec(string s1, string s2) {\n        if (s1.size() != s2.size()) {\n            return false;\n        }\n        int n = s1.size();\n\n        if (s1 == s2) {\n            return true;\n        }\n\n        string res = s1 + \"_\" + s2;\n        if (mp.count(res)) {\n            return mp[res];\n        }\n\n        // Check for base case\n        if (n == 1) {\n            return s1 == s2;\n        }\n\n        bool scramble = false;\n        for (int i = 1; i < n && !scramble; ++i) {\n            // Check if substrings are scrambled\n            if ((rec(s1.substr(0, i), s2.substr(0, i)) && rec(s1.substr(i, n - i), s2.substr(i, n - i))) ||\n                (rec(s1.substr(0, i), s2.substr(n - i, i)) && rec(s1.substr(i, n - i), s2.substr(0, n - i)))) {\n                scramble = true;\n            }\n        }\n\n        return mp[res] = scramble;\n    }\n\n    bool isScramble(string s1, string s2) {\n        mp.clear();\n        return rec(s1, s2);\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"scramble-string","has_notes":false,"flag_type":1}