{"id":1313110723,"question_id":576,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720372929,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1313110723/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"10.5 MB","code":"class Solution {\npublic:\n    int mod = 1000000007;\n    int memo(int m, int n, int move, int i, int j,\n             vector<vector<vector<int>>>& dp) {\n        if (move <= 0 || i < 0 || i >= m || j < 0 || j >= n) {\n            return 0;\n        }\n\n        if (dp[i][j][move] != -1) {\n            return dp[i][j][move];\n        }\n        long long count = 0;\n        if (i == 0) {\n            count++;\n        }\n        if (i == m - 1) {\n            count++;\n        }\n        if (j == 0) {\n            count++;\n        }\n        if (j == n - 1) {\n            count++;\n        }\n        return dp[i][j][move] = (count + memo(m, n, move - 1, i - 1, j, dp) +\n                                 memo(m, n, move - 1, i + 1, j, dp) +\n                                 memo(m, n, move - 1, i, j - 1, dp) +\n                                 memo(m, n, move - 1, i, j + 1, dp)) %\n                                mod;\n    }\n\n    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {\n\n        ////memo\n        vector<vector<vector<int>>> dp(m, vector<vector<int>>(n,vector<int>(maxMove+1, -1)));\n        return memo(m, n, maxMove, startRow, startColumn, dp);\n\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"out-of-boundary-paths","has_notes":false,"flag_type":1}