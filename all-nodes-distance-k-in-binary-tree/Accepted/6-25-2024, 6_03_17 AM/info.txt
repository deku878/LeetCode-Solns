{"id":1299277535,"question_id":893,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1719275597,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1299277535/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"14.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    void creategraph(vector<vector<int>>&adj,TreeNode* root){\n        if(!root){\n            return;\n        }\n        if(root->left){\n            adj[root->left->val].push_back(root->val);\n            adj[root->val].push_back(root->left->val);\n            creategraph(adj,root->left);\n        }\n        if(root->right){\n            adj[root->right->val].push_back(root->val);\n            adj[root->val].push_back(root->right->val);\n            creategraph(adj,root->right);\n        }\n    }\n    vector<int> distanceK(TreeNode* root, TreeNode* target, int k) {\n        vector<vector<int>>adj(501);\n        creategraph(adj,root);\n        queue<pair<int,int>>q;\n        q.push({target->val,0});\n        vector<bool>vis(501,0);\n        vis[target->val]=1;\n        vector<int>yt;\n        while(!q.empty()){\n            auto x=q.front();\n            q.pop();\n            if(x.second==k){\n                yt.push_back(x.first);\n            }\n            for(auto y:adj[x.first]){\n                if(!vis[y]){\n                    q.push({y,x.second+1});\n                    vis[y]=true;\n                }\n            }\n        }\n        return yt;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree","has_notes":false,"flag_type":1}