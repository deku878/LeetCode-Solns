{"id":1318065514,"question_id":1025,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1720736779,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1318065514/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"12.5 MB","code":"class Solution {\npublic:\nint mincostTickets(vector<int>& days, vector<int>& costs) {\n  unordered_set<int> travel(begin(days), end(days));\n  int dp[366] = {};\n  for (int i = 1; i < 366; ++i) {\n    if (travel.find(i) == travel.end()) dp[i] = dp[i - 1];\n    else dp[i] = min({ dp[i - 1] + costs[0], dp[max(0, i - 7)] + costs[1], dp[max(0, i - 30)] + costs[2]});\n  }\n  return dp[365];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets","has_notes":false,"flag_type":1}