{"id":1322451207,"question_id":368,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1721101668,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1322451207/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"15.1 MB","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        int n = nums.size();\n        if (n == 0) return {};\n\n        sort(nums.begin(),nums.end());\n        vector<vector<int>>dp(n);\n        \n        vector<int>res={nums[0]};\n        dp[0]=res;\n        for(int i=1;i<n;i++){\n            for(int j=0;j<i;j++){\n                if(nums[i]%nums[j]==0 and dp[i].size()<dp[j].size()){\n                    dp[i]=dp[j];\n                }\n                \n            }\n            dp[i].push_back(nums[i]);\n                if(res.size()<dp[i].size()){\n                    res=dp[i];\n                }\n        }\n        return res;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"largest-divisible-subset","has_notes":false,"flag_type":1}